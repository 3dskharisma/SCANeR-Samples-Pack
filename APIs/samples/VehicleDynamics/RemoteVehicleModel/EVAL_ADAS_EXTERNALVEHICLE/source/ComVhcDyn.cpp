/*
 * File: ComVhcDyn.cpp
 *
  *
  *   --- THIS FILE GENERATED BY S-FUNCTION BUILDER: 3.0 ---
  *
  *   This file is an S-function produced by the S-Function
  *   Builder which only recognizes certain fields.  Changes made
  *   outside these fields will be lost the next time the block is
  *   used to load, edit, and resave this file. This file will be overwritten
  *   by the S-function Builder block. If you want to edit this file by hand, 
  *   you must change it only in the area defined as:  
  *
  *        %%%-SFUNWIZ_defines_Changes_BEGIN
  *        #define NAME 'replacement text' 
  *        %%% SFUNWIZ_defines_Changes_END
  *
  *   DO NOT change NAME--Change the 'replacement text' only.
  *
  *   For better compatibility with the Simulink Coder, the
  *   "wrapper" S-function technique is used.  This is discussed
  *   in the Simulink Coder's Manual in the Chapter titled,
  *   "Wrapper S-functions".
  *
  *  -------------------------------------------------------------------------
  * | See matlabroot/simulink/src/sfuntmpl_doc.c for a more detailed template |
  *  ------------------------------------------------------------------------- 
* Created: Thu Feb 24 12:02:52 2022
*/
#define S_FUNCTION_LEVEL 2
#define S_FUNCTION_NAME ComVhcDyn
/*<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<*/
/* %%%-SFUNWIZ_defines_Changes_BEGIN --- EDIT HERE TO _END */
#define NUM_INPUTS          45
/* Input Port  0 */
#define IN_PORT_0_NAME      pos
#define INPUT_0_WIDTH       3
#define INPUT_DIMS_0_COL    1
#define INPUT_0_DTYPE       real_T
#define INPUT_0_COMPLEX     COMPLEX_NO
#define IN_0_FRAME_BASED    FRAME_NO
#define IN_0_BUS_BASED      0
#define IN_0_BUS_NAME       
#define IN_0_DIMS           1-D
#define INPUT_0_FEEDTHROUGH 1
#define IN_0_ISSIGNED        0
#define IN_0_WORDLENGTH      8
#define IN_0_FIXPOINTSCALING 1
#define IN_0_FRACTIONLENGTH  9
#define IN_0_BIAS            0
#define IN_0_SLOPE           0.125
/* Input Port  1 */
#define IN_PORT_1_NAME      roll
#define INPUT_1_WIDTH       1
#define INPUT_DIMS_1_COL    1
#define INPUT_1_DTYPE       real_T
#define INPUT_1_COMPLEX     COMPLEX_NO
#define IN_1_FRAME_BASED    FRAME_NO
#define IN_1_BUS_BASED      0
#define IN_1_BUS_NAME       
#define IN_1_DIMS           1-D
#define INPUT_1_FEEDTHROUGH 1
#define IN_1_ISSIGNED        0
#define IN_1_WORDLENGTH      8
#define IN_1_FIXPOINTSCALING 1
#define IN_1_FRACTIONLENGTH  9
#define IN_1_BIAS            0
#define IN_1_SLOPE           0.125
/* Input Port  2 */
#define IN_PORT_2_NAME      pitch
#define INPUT_2_WIDTH       1
#define INPUT_DIMS_2_COL    1
#define INPUT_2_DTYPE       real_T
#define INPUT_2_COMPLEX     COMPLEX_NO
#define IN_2_FRAME_BASED    FRAME_NO
#define IN_2_BUS_BASED      0
#define IN_2_BUS_NAME       
#define IN_2_DIMS           1-D
#define INPUT_2_FEEDTHROUGH 1
#define IN_2_ISSIGNED        0
#define IN_2_WORDLENGTH      8
#define IN_2_FIXPOINTSCALING 1
#define IN_2_FRACTIONLENGTH  9
#define IN_2_BIAS            0
#define IN_2_SLOPE           0.125
/* Input Port  3 */
#define IN_PORT_3_NAME      heading
#define INPUT_3_WIDTH       1
#define INPUT_DIMS_3_COL    1
#define INPUT_3_DTYPE       real_T
#define INPUT_3_COMPLEX     COMPLEX_NO
#define IN_3_FRAME_BASED    FRAME_NO
#define IN_3_BUS_BASED      0
#define IN_3_BUS_NAME       
#define IN_3_DIMS           1-D
#define INPUT_3_FEEDTHROUGH 1
#define IN_3_ISSIGNED        0
#define IN_3_WORDLENGTH      8
#define IN_3_FIXPOINTSCALING 1
#define IN_3_FRACTIONLENGTH  9
#define IN_3_BIAS            0
#define IN_3_SLOPE           0.125
/* Input Port  4 */
#define IN_PORT_4_NAME      speed
#define INPUT_4_WIDTH       6
#define INPUT_DIMS_4_COL    1
#define INPUT_4_DTYPE       real_T
#define INPUT_4_COMPLEX     COMPLEX_NO
#define IN_4_FRAME_BASED    FRAME_NO
#define IN_4_BUS_BASED      0
#define IN_4_BUS_NAME       
#define IN_4_DIMS           1-D
#define INPUT_4_FEEDTHROUGH 1
#define IN_4_ISSIGNED        0
#define IN_4_WORDLENGTH      8
#define IN_4_FIXPOINTSCALING 1
#define IN_4_FRACTIONLENGTH  9
#define IN_4_BIAS            0
#define IN_4_SLOPE           0.125
/* Input Port  5 */
#define IN_PORT_5_NAME      accel
#define INPUT_5_WIDTH       6
#define INPUT_DIMS_5_COL    1
#define INPUT_5_DTYPE       real_T
#define INPUT_5_COMPLEX     COMPLEX_NO
#define IN_5_FRAME_BASED    FRAME_NO
#define IN_5_BUS_BASED      0
#define IN_5_BUS_NAME       
#define IN_5_DIMS           1-D
#define INPUT_5_FEEDTHROUGH 1
#define IN_5_ISSIGNED        0
#define IN_5_WORDLENGTH      8
#define IN_5_FIXPOINTSCALING 1
#define IN_5_FRACTIONLENGTH  9
#define IN_5_BIAS            0
#define IN_5_SLOPE           0.125
/* Input Port  6 */
#define IN_PORT_6_NAME      engineStatus
#define INPUT_6_WIDTH       1
#define INPUT_DIMS_6_COL    1
#define INPUT_6_DTYPE       real_T
#define INPUT_6_COMPLEX     COMPLEX_NO
#define IN_6_FRAME_BASED    FRAME_NO
#define IN_6_BUS_BASED      0
#define IN_6_BUS_NAME       
#define IN_6_DIMS           1-D
#define INPUT_6_FEEDTHROUGH 1
#define IN_6_ISSIGNED        0
#define IN_6_WORDLENGTH      8
#define IN_6_FIXPOINTSCALING 1
#define IN_6_FRACTIONLENGTH  9
#define IN_6_BIAS            0
#define IN_6_SLOPE           0.125
/* Input Port  7 */
#define IN_PORT_7_NAME      engineSpeed
#define INPUT_7_WIDTH       1
#define INPUT_DIMS_7_COL    1
#define INPUT_7_DTYPE       real_T
#define INPUT_7_COMPLEX     COMPLEX_NO
#define IN_7_FRAME_BASED    FRAME_NO
#define IN_7_BUS_BASED      0
#define IN_7_BUS_NAME       
#define IN_7_DIMS           1-D
#define INPUT_7_FEEDTHROUGH 1
#define IN_7_ISSIGNED        0
#define IN_7_WORDLENGTH      8
#define IN_7_FIXPOINTSCALING 1
#define IN_7_FRACTIONLENGTH  9
#define IN_7_BIAS            0
#define IN_7_SLOPE           0.125
/* Input Port  8 */
#define IN_PORT_8_NAME      effectiveSteeringWheelAngle
#define INPUT_8_WIDTH       1
#define INPUT_DIMS_8_COL    1
#define INPUT_8_DTYPE       real_T
#define INPUT_8_COMPLEX     COMPLEX_NO
#define IN_8_FRAME_BASED    FRAME_NO
#define IN_8_BUS_BASED      0
#define IN_8_BUS_NAME       
#define IN_8_DIMS           1-D
#define INPUT_8_FEEDTHROUGH 1
#define IN_8_ISSIGNED        0
#define IN_8_WORDLENGTH      8
#define IN_8_FIXPOINTSCALING 1
#define IN_8_FRACTIONLENGTH  9
#define IN_8_BIAS            0
#define IN_8_SLOPE           0.125
/* Input Port  9 */
#define IN_PORT_9_NAME      SteeringWheelFeedbackTorque
#define INPUT_9_WIDTH       1
#define INPUT_DIMS_9_COL    1
#define INPUT_9_DTYPE       real_T
#define INPUT_9_COMPLEX     COMPLEX_NO
#define IN_9_FRAME_BASED    FRAME_NO
#define IN_9_BUS_BASED      0
#define IN_9_BUS_NAME       
#define IN_9_DIMS           1-D
#define INPUT_9_FEEDTHROUGH 1
#define IN_9_ISSIGNED        0
#define IN_9_WORDLENGTH      8
#define IN_9_FIXPOINTSCALING 1
#define IN_9_FRACTIONLENGTH  9
#define IN_9_BIAS            0
#define IN_9_SLOPE           0.125
/* Input Port  10 */
#define IN_PORT_10_NAME      effectiveGasPedalPos
#define INPUT_10_WIDTH       1
#define INPUT_DIMS_10_COL    1
#define INPUT_10_DTYPE       real_T
#define INPUT_10_COMPLEX     COMPLEX_NO
#define IN_10_FRAME_BASED    FRAME_NO
#define IN_10_BUS_BASED      0
#define IN_10_BUS_NAME       
#define IN_10_DIMS           1-D
#define INPUT_10_FEEDTHROUGH 1
#define IN_10_ISSIGNED        0
#define IN_10_WORDLENGTH      8
#define IN_10_FIXPOINTSCALING 1
#define IN_10_FRACTIONLENGTH  9
#define IN_10_BIAS            0
#define IN_10_SLOPE           0.125
/* Input Port  11 */
#define IN_PORT_11_NAME      effectiveBrake
#define INPUT_11_WIDTH       1
#define INPUT_DIMS_11_COL    1
#define INPUT_11_DTYPE       real_T
#define INPUT_11_COMPLEX     COMPLEX_NO
#define IN_11_FRAME_BASED    FRAME_NO
#define IN_11_BUS_BASED      0
#define IN_11_BUS_NAME       
#define IN_11_DIMS           1-D
#define INPUT_11_FEEDTHROUGH 1
#define IN_11_ISSIGNED        0
#define IN_11_WORDLENGTH      8
#define IN_11_FIXPOINTSCALING 1
#define IN_11_FRACTIONLENGTH  9
#define IN_11_BIAS            0
#define IN_11_SLOPE           0.125
/* Input Port  12 */
#define IN_PORT_12_NAME      effectiveHandBrake
#define INPUT_12_WIDTH       1
#define INPUT_DIMS_12_COL    1
#define INPUT_12_DTYPE       real_T
#define INPUT_12_COMPLEX     COMPLEX_NO
#define IN_12_FRAME_BASED    FRAME_NO
#define IN_12_BUS_BASED      0
#define IN_12_BUS_NAME       
#define IN_12_DIMS           1-D
#define INPUT_12_FEEDTHROUGH 1
#define IN_12_ISSIGNED        0
#define IN_12_WORDLENGTH      8
#define IN_12_FIXPOINTSCALING 1
#define IN_12_FRACTIONLENGTH  9
#define IN_12_BIAS            0
#define IN_12_SLOPE           0.125
/* Input Port  13 */
#define IN_PORT_13_NAME      effectiveClutch
#define INPUT_13_WIDTH       1
#define INPUT_DIMS_13_COL    1
#define INPUT_13_DTYPE       real_T
#define INPUT_13_COMPLEX     COMPLEX_NO
#define IN_13_FRAME_BASED    FRAME_NO
#define IN_13_BUS_BASED      0
#define IN_13_BUS_NAME       
#define IN_13_DIMS           1-D
#define INPUT_13_FEEDTHROUGH 1
#define IN_13_ISSIGNED        0
#define IN_13_WORDLENGTH      8
#define IN_13_FIXPOINTSCALING 1
#define IN_13_FRACTIONLENGTH  9
#define IN_13_BIAS            0
#define IN_13_SLOPE           0.125
/* Input Port  14 */
#define IN_PORT_14_NAME      effectiveGearEngaged
#define INPUT_14_WIDTH       1
#define INPUT_DIMS_14_COL    1
#define INPUT_14_DTYPE       real_T
#define INPUT_14_COMPLEX     COMPLEX_NO
#define IN_14_FRAME_BASED    FRAME_NO
#define IN_14_BUS_BASED      0
#define IN_14_BUS_NAME       
#define IN_14_DIMS           1-D
#define INPUT_14_FEEDTHROUGH 1
#define IN_14_ISSIGNED        0
#define IN_14_WORDLENGTH      8
#define IN_14_FIXPOINTSCALING 1
#define IN_14_FRACTIONLENGTH  9
#define IN_14_BIAS            0
#define IN_14_SLOPE           0.125
/* Input Port  15 */
#define IN_PORT_15_NAME      effectiveGearBoxMode
#define INPUT_15_WIDTH       1
#define INPUT_DIMS_15_COL    1
#define INPUT_15_DTYPE       real_T
#define INPUT_15_COMPLEX     COMPLEX_NO
#define IN_15_FRAME_BASED    FRAME_NO
#define IN_15_BUS_BASED      0
#define IN_15_BUS_NAME       
#define IN_15_DIMS           1-D
#define INPUT_15_FEEDTHROUGH 1
#define IN_15_ISSIGNED        0
#define IN_15_WORDLENGTH      8
#define IN_15_FIXPOINTSCALING 1
#define IN_15_FRACTIONLENGTH  9
#define IN_15_BIAS            0
#define IN_15_SLOPE           0.125
/* Input Port  16 */
#define IN_PORT_16_NAME      effectiveIgnitionKeyPosition
#define INPUT_16_WIDTH       1
#define INPUT_DIMS_16_COL    1
#define INPUT_16_DTYPE       real_T
#define INPUT_16_COMPLEX     COMPLEX_NO
#define IN_16_FRAME_BASED    FRAME_NO
#define IN_16_BUS_BASED      0
#define IN_16_BUS_NAME       
#define IN_16_DIMS           1-D
#define INPUT_16_FEEDTHROUGH 1
#define IN_16_ISSIGNED        0
#define IN_16_WORDLENGTH      8
#define IN_16_FIXPOINTSCALING 1
#define IN_16_FRACTIONLENGTH  9
#define IN_16_BIAS            0
#define IN_16_SLOPE           0.125
/* Input Port  17 */
#define IN_PORT_17_NAME      effectiveConsumption
#define INPUT_17_WIDTH       1
#define INPUT_DIMS_17_COL    1
#define INPUT_17_DTYPE       real_T
#define INPUT_17_COMPLEX     COMPLEX_NO
#define IN_17_FRAME_BASED    FRAME_NO
#define IN_17_BUS_BASED      0
#define IN_17_BUS_NAME       
#define IN_17_DIMS           1-D
#define INPUT_17_FEEDTHROUGH 1
#define IN_17_ISSIGNED        0
#define IN_17_WORDLENGTH      8
#define IN_17_FIXPOINTSCALING 1
#define IN_17_FRACTIONLENGTH  9
#define IN_17_BIAS            0
#define IN_17_SLOPE           0.125
/* Input Port  18 */
#define IN_PORT_18_NAME      isEngineRetarder
#define INPUT_18_WIDTH       1
#define INPUT_DIMS_18_COL    1
#define INPUT_18_DTYPE       real_T
#define INPUT_18_COMPLEX     COMPLEX_NO
#define IN_18_FRAME_BASED    FRAME_NO
#define IN_18_BUS_BASED      0
#define IN_18_BUS_NAME       
#define IN_18_DIMS           1-D
#define INPUT_18_FEEDTHROUGH 1
#define IN_18_ISSIGNED        0
#define IN_18_WORDLENGTH      8
#define IN_18_FIXPOINTSCALING 1
#define IN_18_FRACTIONLENGTH  9
#define IN_18_BIAS            0
#define IN_18_SLOPE           0.125
/* Input Port  19 */
#define IN_PORT_19_NAME      effectiveBrakeRetarderNotch
#define INPUT_19_WIDTH       1
#define INPUT_DIMS_19_COL    1
#define INPUT_19_DTYPE       real_T
#define INPUT_19_COMPLEX     COMPLEX_NO
#define IN_19_FRAME_BASED    FRAME_NO
#define IN_19_BUS_BASED      0
#define IN_19_BUS_NAME       
#define IN_19_DIMS           1-D
#define INPUT_19_FEEDTHROUGH 1
#define IN_19_ISSIGNED        0
#define IN_19_WORDLENGTH      8
#define IN_19_FIXPOINTSCALING 1
#define IN_19_FRACTIONLENGTH  9
#define IN_19_BIAS            0
#define IN_19_SLOPE           0.125
/* Input Port  20 */
#define IN_PORT_20_NAME      effectiveTrailerBrake
#define INPUT_20_WIDTH       1
#define INPUT_DIMS_20_COL    1
#define INPUT_20_DTYPE       real_T
#define INPUT_20_COMPLEX     COMPLEX_NO
#define IN_20_FRAME_BASED    FRAME_NO
#define IN_20_BUS_BASED      0
#define IN_20_BUS_NAME       
#define IN_20_DIMS           1-D
#define INPUT_20_FEEDTHROUGH 1
#define IN_20_ISSIGNED        0
#define IN_20_WORDLENGTH      8
#define IN_20_FIXPOINTSCALING 1
#define IN_20_FRACTIONLENGTH  9
#define IN_20_BIAS            0
#define IN_20_SLOPE           0.125
/* Input Port  21 */
#define IN_PORT_21_NAME      effectiveTransferChoice
#define INPUT_21_WIDTH       1
#define INPUT_DIMS_21_COL    1
#define INPUT_21_DTYPE       real_T
#define INPUT_21_COMPLEX     COMPLEX_NO
#define IN_21_FRAME_BASED    FRAME_NO
#define IN_21_BUS_BASED      0
#define IN_21_BUS_NAME       
#define IN_21_DIMS           1-D
#define INPUT_21_FEEDTHROUGH 1
#define IN_21_ISSIGNED        0
#define IN_21_WORDLENGTH      8
#define IN_21_FIXPOINTSCALING 1
#define IN_21_FRACTIONLENGTH  9
#define IN_21_BIAS            0
#define IN_21_SLOPE           0.125
/* Input Port  22 */
#define IN_PORT_22_NAME      effectiveLockDiffMode
#define INPUT_22_WIDTH       1
#define INPUT_DIMS_22_COL    1
#define INPUT_22_DTYPE       real_T
#define INPUT_22_COMPLEX     COMPLEX_NO
#define IN_22_FRAME_BASED    FRAME_NO
#define IN_22_BUS_BASED      0
#define IN_22_BUS_NAME       
#define IN_22_DIMS           1-D
#define INPUT_22_FEEDTHROUGH 1
#define IN_22_ISSIGNED        0
#define IN_22_WORDLENGTH      8
#define IN_22_FIXPOINTSCALING 1
#define IN_22_FRACTIONLENGTH  9
#define IN_22_BIAS            0
#define IN_22_SLOPE           0.125
/* Input Port  23 */
#define IN_PORT_23_NAME      effectiveForceLockup
#define INPUT_23_WIDTH       1
#define INPUT_DIMS_23_COL    1
#define INPUT_23_DTYPE       real_T
#define INPUT_23_COMPLEX     COMPLEX_NO
#define IN_23_FRAME_BASED    FRAME_NO
#define IN_23_BUS_BASED      0
#define IN_23_BUS_NAME       
#define IN_23_DIMS           1-D
#define INPUT_23_FEEDTHROUGH 1
#define IN_23_ISSIGNED        0
#define IN_23_WORDLENGTH      8
#define IN_23_FIXPOINTSCALING 1
#define IN_23_FRACTIONLENGTH  9
#define IN_23_BIAS            0
#define IN_23_SLOPE           0.125
/* Input Port  24 */
#define IN_PORT_24_NAME      effectivePlowMode
#define INPUT_24_WIDTH       1
#define INPUT_DIMS_24_COL    1
#define INPUT_24_DTYPE       real_T
#define INPUT_24_COMPLEX     COMPLEX_NO
#define IN_24_FRAME_BASED    FRAME_NO
#define IN_24_BUS_BASED      0
#define IN_24_BUS_NAME       
#define IN_24_DIMS           1-D
#define INPUT_24_FEEDTHROUGH 1
#define IN_24_ISSIGNED        0
#define IN_24_WORDLENGTH      8
#define IN_24_FIXPOINTSCALING 1
#define IN_24_FRACTIONLENGTH  9
#define IN_24_BIAS            0
#define IN_24_SLOPE           0.125
/* Input Port  25 */
#define IN_PORT_25_NAME      effectiveHorn
#define INPUT_25_WIDTH       1
#define INPUT_DIMS_25_COL    1
#define INPUT_25_DTYPE       real_T
#define INPUT_25_COMPLEX     COMPLEX_NO
#define IN_25_FRAME_BASED    FRAME_NO
#define IN_25_BUS_BASED      0
#define IN_25_BUS_NAME       
#define IN_25_DIMS           1-D
#define INPUT_25_FEEDTHROUGH 1
#define IN_25_ISSIGNED        0
#define IN_25_WORDLENGTH      8
#define IN_25_FIXPOINTSCALING 1
#define IN_25_FRACTIONLENGTH  9
#define IN_25_BIAS            0
#define IN_25_SLOPE           0.125
/* Input Port  26 */
#define IN_PORT_26_NAME      effectiveLights
#define INPUT_26_WIDTH       1
#define INPUT_DIMS_26_COL    1
#define INPUT_26_DTYPE       real_T
#define INPUT_26_COMPLEX     COMPLEX_NO
#define IN_26_FRAME_BASED    FRAME_NO
#define IN_26_BUS_BASED      0
#define IN_26_BUS_NAME       
#define IN_26_DIMS           1-D
#define INPUT_26_FEEDTHROUGH 1
#define IN_26_ISSIGNED        0
#define IN_26_WORDLENGTH      8
#define IN_26_FIXPOINTSCALING 1
#define IN_26_FRACTIONLENGTH  9
#define IN_26_BIAS            0
#define IN_26_SLOPE           0.125
/* Input Port  27 */
#define IN_PORT_27_NAME      effectiveRearWiperState
#define INPUT_27_WIDTH       1
#define INPUT_DIMS_27_COL    1
#define INPUT_27_DTYPE       real_T
#define INPUT_27_COMPLEX     COMPLEX_NO
#define IN_27_FRAME_BASED    FRAME_NO
#define IN_27_BUS_BASED      0
#define IN_27_BUS_NAME       
#define IN_27_DIMS           1-D
#define INPUT_27_FEEDTHROUGH 1
#define IN_27_ISSIGNED        0
#define IN_27_WORDLENGTH      8
#define IN_27_FIXPOINTSCALING 1
#define IN_27_FRACTIONLENGTH  9
#define IN_27_BIAS            0
#define IN_27_SLOPE           0.125
/* Input Port  28 */
#define IN_PORT_28_NAME      effectiveFrontWiperState
#define INPUT_28_WIDTH       1
#define INPUT_DIMS_28_COL    1
#define INPUT_28_DTYPE       real_T
#define INPUT_28_COMPLEX     COMPLEX_NO
#define IN_28_FRAME_BASED    FRAME_NO
#define IN_28_BUS_BASED      0
#define IN_28_BUS_NAME       
#define IN_28_DIMS           1-D
#define INPUT_28_FEEDTHROUGH 1
#define IN_28_ISSIGNED        0
#define IN_28_WORDLENGTH      8
#define IN_28_FIXPOINTSCALING 1
#define IN_28_FRACTIONLENGTH  9
#define IN_28_BIAS            0
#define IN_28_SLOPE           0.125
/* Input Port  29 */
#define IN_PORT_29_NAME      reserved1
#define INPUT_29_WIDTH       1
#define INPUT_DIMS_29_COL    1
#define INPUT_29_DTYPE       real_T
#define INPUT_29_COMPLEX     COMPLEX_NO
#define IN_29_FRAME_BASED    FRAME_NO
#define IN_29_BUS_BASED      0
#define IN_29_BUS_NAME       
#define IN_29_DIMS           1-D
#define INPUT_29_FEEDTHROUGH 1
#define IN_29_ISSIGNED        0
#define IN_29_WORDLENGTH      8
#define IN_29_FIXPOINTSCALING 1
#define IN_29_FRACTIONLENGTH  9
#define IN_29_BIAS            0
#define IN_29_SLOPE           0.125
/* Input Port  30 */
#define IN_PORT_30_NAME      reserved2
#define INPUT_30_WIDTH       1
#define INPUT_DIMS_30_COL    1
#define INPUT_30_DTYPE       real_T
#define INPUT_30_COMPLEX     COMPLEX_NO
#define IN_30_FRAME_BASED    FRAME_NO
#define IN_30_BUS_BASED      0
#define IN_30_BUS_NAME       
#define IN_30_DIMS           1-D
#define INPUT_30_FEEDTHROUGH 1
#define IN_30_ISSIGNED        0
#define IN_30_WORDLENGTH      8
#define IN_30_FIXPOINTSCALING 1
#define IN_30_FRACTIONLENGTH  9
#define IN_30_BIAS            0
#define IN_30_SLOPE           0.125
/* Input Port  31 */
#define IN_PORT_31_NAME      effectiveBatteryStateOfCharge
#define INPUT_31_WIDTH       1
#define INPUT_DIMS_31_COL    1
#define INPUT_31_DTYPE       real_T
#define INPUT_31_COMPLEX     COMPLEX_NO
#define IN_31_FRAME_BASED    FRAME_NO
#define IN_31_BUS_BASED      0
#define IN_31_BUS_NAME       
#define IN_31_DIMS           1-D
#define INPUT_31_FEEDTHROUGH 1
#define IN_31_ISSIGNED        0
#define IN_31_WORDLENGTH      8
#define IN_31_FIXPOINTSCALING 1
#define IN_31_FRACTIONLENGTH  9
#define IN_31_BIAS            0
#define IN_31_SLOPE           0.125
/* Input Port  32 */
#define IN_PORT_32_NAME      wheel0
#define INPUT_32_WIDTH       10
#define INPUT_DIMS_32_COL    1
#define INPUT_32_DTYPE       real_T
#define INPUT_32_COMPLEX     COMPLEX_NO
#define IN_32_FRAME_BASED    FRAME_NO
#define IN_32_BUS_BASED      0
#define IN_32_BUS_NAME       
#define IN_32_DIMS           1-D
#define INPUT_32_FEEDTHROUGH 1
#define IN_32_ISSIGNED        0
#define IN_32_WORDLENGTH      8
#define IN_32_FIXPOINTSCALING 1
#define IN_32_FRACTIONLENGTH  9
#define IN_32_BIAS            0
#define IN_32_SLOPE           0.125
/* Input Port  33 */
#define IN_PORT_33_NAME      wheel1
#define INPUT_33_WIDTH       10
#define INPUT_DIMS_33_COL    1
#define INPUT_33_DTYPE       real_T
#define INPUT_33_COMPLEX     COMPLEX_NO
#define IN_33_FRAME_BASED    FRAME_NO
#define IN_33_BUS_BASED      0
#define IN_33_BUS_NAME       
#define IN_33_DIMS           1-D
#define INPUT_33_FEEDTHROUGH 1
#define IN_33_ISSIGNED        0
#define IN_33_WORDLENGTH      8
#define IN_33_FIXPOINTSCALING 1
#define IN_33_FRACTIONLENGTH  9
#define IN_33_BIAS            0
#define IN_33_SLOPE           0.125
/* Input Port  34 */
#define IN_PORT_34_NAME      wheel2
#define INPUT_34_WIDTH       10
#define INPUT_DIMS_34_COL    1
#define INPUT_34_DTYPE       real_T
#define INPUT_34_COMPLEX     COMPLEX_NO
#define IN_34_FRAME_BASED    FRAME_NO
#define IN_34_BUS_BASED      0
#define IN_34_BUS_NAME       
#define IN_34_DIMS           1-D
#define INPUT_34_FEEDTHROUGH 1
#define IN_34_ISSIGNED        0
#define IN_34_WORDLENGTH      8
#define IN_34_FIXPOINTSCALING 1
#define IN_34_FRACTIONLENGTH  9
#define IN_34_BIAS            0
#define IN_34_SLOPE           0.125
/* Input Port  35 */
#define IN_PORT_35_NAME      wheel3
#define INPUT_35_WIDTH       10
#define INPUT_DIMS_35_COL    1
#define INPUT_35_DTYPE       real_T
#define INPUT_35_COMPLEX     COMPLEX_NO
#define IN_35_FRAME_BASED    FRAME_NO
#define IN_35_BUS_BASED      0
#define IN_35_BUS_NAME       
#define IN_35_DIMS           1-D
#define INPUT_35_FEEDTHROUGH 1
#define IN_35_ISSIGNED        0
#define IN_35_WORDLENGTH      8
#define IN_35_FIXPOINTSCALING 1
#define IN_35_FRACTIONLENGTH  9
#define IN_35_BIAS            0
#define IN_35_SLOPE           0.125
/* Input Port  36 */
#define IN_PORT_36_NAME      electricMotor0
#define INPUT_36_WIDTH       3
#define INPUT_DIMS_36_COL    1
#define INPUT_36_DTYPE       real_T
#define INPUT_36_COMPLEX     COMPLEX_NO
#define IN_36_FRAME_BASED    FRAME_NO
#define IN_36_BUS_BASED      0
#define IN_36_BUS_NAME       
#define IN_36_DIMS           1-D
#define INPUT_36_FEEDTHROUGH 1
#define IN_36_ISSIGNED        0
#define IN_36_WORDLENGTH      8
#define IN_36_FIXPOINTSCALING 1
#define IN_36_FRACTIONLENGTH  9
#define IN_36_BIAS            0
#define IN_36_SLOPE           0.125
/* Input Port  37 */
#define IN_PORT_37_NAME      electricMotor1
#define INPUT_37_WIDTH       3
#define INPUT_DIMS_37_COL    1
#define INPUT_37_DTYPE       real_T
#define INPUT_37_COMPLEX     COMPLEX_NO
#define IN_37_FRAME_BASED    FRAME_NO
#define IN_37_BUS_BASED      0
#define IN_37_BUS_NAME       
#define IN_37_DIMS           1-D
#define INPUT_37_FEEDTHROUGH 1
#define IN_37_ISSIGNED        0
#define IN_37_WORDLENGTH      8
#define IN_37_FIXPOINTSCALING 1
#define IN_37_FRACTIONLENGTH  9
#define IN_37_BIAS            0
#define IN_37_SLOPE           0.125
/* Input Port  38 */
#define IN_PORT_38_NAME      electricMotor2
#define INPUT_38_WIDTH       3
#define INPUT_DIMS_38_COL    1
#define INPUT_38_DTYPE       real_T
#define INPUT_38_COMPLEX     COMPLEX_NO
#define IN_38_FRAME_BASED    FRAME_NO
#define IN_38_BUS_BASED      0
#define IN_38_BUS_NAME       
#define IN_38_DIMS           1-D
#define INPUT_38_FEEDTHROUGH 1
#define IN_38_ISSIGNED        0
#define IN_38_WORDLENGTH      8
#define IN_38_FIXPOINTSCALING 1
#define IN_38_FRACTIONLENGTH  9
#define IN_38_BIAS            0
#define IN_38_SLOPE           0.125
/* Input Port  39 */
#define IN_PORT_39_NAME      electricMotor3
#define INPUT_39_WIDTH       3
#define INPUT_DIMS_39_COL    1
#define INPUT_39_DTYPE       real_T
#define INPUT_39_COMPLEX     COMPLEX_NO
#define IN_39_FRAME_BASED    FRAME_NO
#define IN_39_BUS_BASED      0
#define IN_39_BUS_NAME       
#define IN_39_DIMS           1-D
#define INPUT_39_FEEDTHROUGH 1
#define IN_39_ISSIGNED        0
#define IN_39_WORDLENGTH      8
#define IN_39_FIXPOINTSCALING 1
#define IN_39_FRACTIONLENGTH  9
#define IN_39_BIAS            0
#define IN_39_SLOPE           0.125
/* Input Port  40 */
#define IN_PORT_40_NAME      electricMotor4
#define INPUT_40_WIDTH       3
#define INPUT_DIMS_40_COL    1
#define INPUT_40_DTYPE       real_T
#define INPUT_40_COMPLEX     COMPLEX_NO
#define IN_40_FRAME_BASED    FRAME_NO
#define IN_40_BUS_BASED      0
#define IN_40_BUS_NAME       
#define IN_40_DIMS           1-D
#define INPUT_40_FEEDTHROUGH 1
#define IN_40_ISSIGNED        0
#define IN_40_WORDLENGTH      8
#define IN_40_FIXPOINTSCALING 1
#define IN_40_FRACTIONLENGTH  9
#define IN_40_BIAS            0
#define IN_40_SLOPE           0.125
/* Input Port  41 */
#define IN_PORT_41_NAME      electricMotor5
#define INPUT_41_WIDTH       3
#define INPUT_DIMS_41_COL    1
#define INPUT_41_DTYPE       real_T
#define INPUT_41_COMPLEX     COMPLEX_NO
#define IN_41_FRAME_BASED    FRAME_NO
#define IN_41_BUS_BASED      0
#define IN_41_BUS_NAME       
#define IN_41_DIMS           1-D
#define INPUT_41_FEEDTHROUGH 1
#define IN_41_ISSIGNED        0
#define IN_41_WORDLENGTH      8
#define IN_41_FIXPOINTSCALING 1
#define IN_41_FRACTIONLENGTH  9
#define IN_41_BIAS            0
#define IN_41_SLOPE           0.125
/* Input Port  42 */
#define IN_PORT_42_NAME      electricMotor6
#define INPUT_42_WIDTH       3
#define INPUT_DIMS_42_COL    1
#define INPUT_42_DTYPE       real_T
#define INPUT_42_COMPLEX     COMPLEX_NO
#define IN_42_FRAME_BASED    FRAME_NO
#define IN_42_BUS_BASED      0
#define IN_42_BUS_NAME       
#define IN_42_DIMS           1-D
#define INPUT_42_FEEDTHROUGH 1
#define IN_42_ISSIGNED        0
#define IN_42_WORDLENGTH      8
#define IN_42_FIXPOINTSCALING 1
#define IN_42_FRACTIONLENGTH  9
#define IN_42_BIAS            0
#define IN_42_SLOPE           0.125
/* Input Port  43 */
#define IN_PORT_43_NAME      customVehicleOutput
#define INPUT_43_WIDTH       512
#define INPUT_DIMS_43_COL    1
#define INPUT_43_DTYPE       real_T
#define INPUT_43_COMPLEX     COMPLEX_NO
#define IN_43_FRAME_BASED    FRAME_NO
#define IN_43_BUS_BASED      0
#define IN_43_BUS_NAME       
#define IN_43_DIMS           1-D
#define INPUT_43_FEEDTHROUGH 1
#define IN_43_ISSIGNED        0
#define IN_43_WORDLENGTH      8
#define IN_43_FIXPOINTSCALING 1
#define IN_43_FRACTIONLENGTH  9
#define IN_43_BIAS            0
#define IN_43_SLOPE           0.125
/* Input Port  44 */
#define IN_PORT_44_NAME      synchronizedValue
#define INPUT_44_WIDTH       1
#define INPUT_DIMS_44_COL    1
#define INPUT_44_DTYPE       real_T
#define INPUT_44_COMPLEX     COMPLEX_NO
#define IN_44_FRAME_BASED    FRAME_NO
#define IN_44_BUS_BASED      0
#define IN_44_BUS_NAME       
#define IN_44_DIMS           1-D
#define INPUT_44_FEEDTHROUGH 1
#define IN_44_ISSIGNED        0
#define IN_44_WORDLENGTH      8
#define IN_44_FIXPOINTSCALING 1
#define IN_44_FRACTIONLENGTH  9
#define IN_44_BIAS            0
#define IN_44_SLOPE           0.125

#define NUM_OUTPUTS          44
/* Output Port  0 */
#define OUT_PORT_0_NAME      initHeading
#define OUTPUT_0_WIDTH       1
#define OUTPUT_DIMS_0_COL    1
#define OUTPUT_0_DTYPE       real_T
#define OUTPUT_0_COMPLEX     COMPLEX_NO
#define OUT_0_FRAME_BASED    FRAME_NO
#define OUT_0_BUS_BASED      0
#define OUT_0_BUS_NAME       
#define OUT_0_DIMS           1-D
#define OUT_0_ISSIGNED        1
#define OUT_0_WORDLENGTH      8
#define OUT_0_FIXPOINTSCALING 1
#define OUT_0_FRACTIONLENGTH  3
#define OUT_0_BIAS            0
#define OUT_0_SLOPE           0.125
/* Output Port  1 */
#define OUT_PORT_1_NAME      initSpeed
#define OUTPUT_1_WIDTH       1
#define OUTPUT_DIMS_1_COL    1
#define OUTPUT_1_DTYPE       real_T
#define OUTPUT_1_COMPLEX     COMPLEX_NO
#define OUT_1_FRAME_BASED    FRAME_NO
#define OUT_1_BUS_BASED      0
#define OUT_1_BUS_NAME       
#define OUT_1_DIMS           1-D
#define OUT_1_ISSIGNED        1
#define OUT_1_WORDLENGTH      8
#define OUT_1_FIXPOINTSCALING 1
#define OUT_1_FRACTIONLENGTH  3
#define OUT_1_BIAS            0
#define OUT_1_SLOPE           0.125
/* Output Port  2 */
#define OUT_PORT_2_NAME      initGroundPos
#define OUTPUT_2_WIDTH       3
#define OUTPUT_DIMS_2_COL    1
#define OUTPUT_2_DTYPE       real_T
#define OUTPUT_2_COMPLEX     COMPLEX_NO
#define OUT_2_FRAME_BASED    FRAME_NO
#define OUT_2_BUS_BASED      0
#define OUT_2_BUS_NAME       
#define OUT_2_DIMS           1-D
#define OUT_2_ISSIGNED        1
#define OUT_2_WORDLENGTH      8
#define OUT_2_FIXPOINTSCALING 1
#define OUT_2_FRACTIONLENGTH  3
#define OUT_2_BIAS            0
#define OUT_2_SLOPE           0.125
/* Output Port  3 */
#define OUT_PORT_3_NAME      initGroundNorm
#define OUTPUT_3_WIDTH       3
#define OUTPUT_DIMS_3_COL    1
#define OUTPUT_3_DTYPE       real_T
#define OUTPUT_3_COMPLEX     COMPLEX_NO
#define OUT_3_FRAME_BASED    FRAME_NO
#define OUT_3_BUS_BASED      0
#define OUT_3_BUS_NAME       
#define OUT_3_DIMS           1-D
#define OUT_3_ISSIGNED        1
#define OUT_3_WORDLENGTH      8
#define OUT_3_FIXPOINTSCALING 1
#define OUT_3_FRACTIONLENGTH  3
#define OUT_3_BIAS            0
#define OUT_3_SLOPE           0.125
/* Output Port  4 */
#define OUT_PORT_4_NAME      enableCommandOverride
#define OUTPUT_4_WIDTH       1
#define OUTPUT_DIMS_4_COL    1
#define OUTPUT_4_DTYPE       real_T
#define OUTPUT_4_COMPLEX     COMPLEX_NO
#define OUT_4_FRAME_BASED    FRAME_NO
#define OUT_4_BUS_BASED      0
#define OUT_4_BUS_NAME       
#define OUT_4_DIMS           1-D
#define OUT_4_ISSIGNED        1
#define OUT_4_WORDLENGTH      8
#define OUT_4_FIXPOINTSCALING 1
#define OUT_4_FRACTIONLENGTH  3
#define OUT_4_BIAS            0
#define OUT_4_SLOPE           0.125
/* Output Port  5 */
#define OUT_PORT_5_NAME      steeringWheel
#define OUTPUT_5_WIDTH       1
#define OUTPUT_DIMS_5_COL    1
#define OUTPUT_5_DTYPE       real_T
#define OUTPUT_5_COMPLEX     COMPLEX_NO
#define OUT_5_FRAME_BASED    FRAME_NO
#define OUT_5_BUS_BASED      0
#define OUT_5_BUS_NAME       
#define OUT_5_DIMS           1-D
#define OUT_5_ISSIGNED        1
#define OUT_5_WORDLENGTH      8
#define OUT_5_FIXPOINTSCALING 1
#define OUT_5_FRACTIONLENGTH  3
#define OUT_5_BIAS            0
#define OUT_5_SLOPE           0.125
/* Output Port  6 */
#define OUT_PORT_6_NAME      steeringWheelSpeed
#define OUTPUT_6_WIDTH       1
#define OUTPUT_DIMS_6_COL    1
#define OUTPUT_6_DTYPE       real_T
#define OUTPUT_6_COMPLEX     COMPLEX_NO
#define OUT_6_FRAME_BASED    FRAME_NO
#define OUT_6_BUS_BASED      0
#define OUT_6_BUS_NAME       
#define OUT_6_DIMS           1-D
#define OUT_6_ISSIGNED        1
#define OUT_6_WORDLENGTH      8
#define OUT_6_FIXPOINTSCALING 1
#define OUT_6_FRACTIONLENGTH  3
#define OUT_6_BIAS            0
#define OUT_6_SLOPE           0.125
/* Output Port  7 */
#define OUT_PORT_7_NAME      accelerator
#define OUTPUT_7_WIDTH       1
#define OUTPUT_DIMS_7_COL    1
#define OUTPUT_7_DTYPE       real_T
#define OUTPUT_7_COMPLEX     COMPLEX_NO
#define OUT_7_FRAME_BASED    FRAME_NO
#define OUT_7_BUS_BASED      0
#define OUT_7_BUS_NAME       
#define OUT_7_DIMS           1-D
#define OUT_7_ISSIGNED        1
#define OUT_7_WORDLENGTH      8
#define OUT_7_FIXPOINTSCALING 1
#define OUT_7_FRACTIONLENGTH  3
#define OUT_7_BIAS            0
#define OUT_7_SLOPE           0.125
/* Output Port  8 */
#define OUT_PORT_8_NAME      brake
#define OUTPUT_8_WIDTH       1
#define OUTPUT_DIMS_8_COL    1
#define OUTPUT_8_DTYPE       real_T
#define OUTPUT_8_COMPLEX     COMPLEX_NO
#define OUT_8_FRAME_BASED    FRAME_NO
#define OUT_8_BUS_BASED      0
#define OUT_8_BUS_NAME       
#define OUT_8_DIMS           1-D
#define OUT_8_ISSIGNED        1
#define OUT_8_WORDLENGTH      8
#define OUT_8_FIXPOINTSCALING 1
#define OUT_8_FRACTIONLENGTH  3
#define OUT_8_BIAS            0
#define OUT_8_SLOPE           0.125
/* Output Port  9 */
#define OUT_PORT_9_NAME      clutch
#define OUTPUT_9_WIDTH       1
#define OUTPUT_DIMS_9_COL    1
#define OUTPUT_9_DTYPE       real_T
#define OUTPUT_9_COMPLEX     COMPLEX_NO
#define OUT_9_FRAME_BASED    FRAME_NO
#define OUT_9_BUS_BASED      0
#define OUT_9_BUS_NAME       
#define OUT_9_DIMS           1-D
#define OUT_9_ISSIGNED        1
#define OUT_9_WORDLENGTH      8
#define OUT_9_FIXPOINTSCALING 1
#define OUT_9_FRACTIONLENGTH  3
#define OUT_9_BIAS            0
#define OUT_9_SLOPE           0.125
/* Output Port  10 */
#define OUT_PORT_10_NAME      wantedGear
#define OUTPUT_10_WIDTH       1
#define OUTPUT_DIMS_10_COL    1
#define OUTPUT_10_DTYPE       real_T
#define OUTPUT_10_COMPLEX     COMPLEX_NO
#define OUT_10_FRAME_BASED    FRAME_NO
#define OUT_10_BUS_BASED      0
#define OUT_10_BUS_NAME       
#define OUT_10_DIMS           1-D
#define OUT_10_ISSIGNED        1
#define OUT_10_WORDLENGTH      8
#define OUT_10_FIXPOINTSCALING 1
#define OUT_10_FRACTIONLENGTH  3
#define OUT_10_BIAS            0
#define OUT_10_SLOPE           0.125
/* Output Port  11 */
#define OUT_PORT_11_NAME      gearBoxAutoMode
#define OUTPUT_11_WIDTH       1
#define OUTPUT_DIMS_11_COL    1
#define OUTPUT_11_DTYPE       real_T
#define OUTPUT_11_COMPLEX     COMPLEX_NO
#define OUT_11_FRAME_BASED    FRAME_NO
#define OUT_11_BUS_BASED      0
#define OUT_11_BUS_NAME       
#define OUT_11_DIMS           1-D
#define OUT_11_ISSIGNED        1
#define OUT_11_WORDLENGTH      8
#define OUT_11_FIXPOINTSCALING 1
#define OUT_11_FRACTIONLENGTH  3
#define OUT_11_BIAS            0
#define OUT_11_SLOPE           0.125
/* Output Port  12 */
#define OUT_PORT_12_NAME      shiftUp
#define OUTPUT_12_WIDTH       1
#define OUTPUT_DIMS_12_COL    1
#define OUTPUT_12_DTYPE       real_T
#define OUTPUT_12_COMPLEX     COMPLEX_NO
#define OUT_12_FRAME_BASED    FRAME_NO
#define OUT_12_BUS_BASED      0
#define OUT_12_BUS_NAME       
#define OUT_12_DIMS           1-D
#define OUT_12_ISSIGNED        1
#define OUT_12_WORDLENGTH      8
#define OUT_12_FIXPOINTSCALING 1
#define OUT_12_FRACTIONLENGTH  3
#define OUT_12_BIAS            0
#define OUT_12_SLOPE           0.125
/* Output Port  13 */
#define OUT_PORT_13_NAME      shiftDown
#define OUTPUT_13_WIDTH       1
#define OUTPUT_DIMS_13_COL    1
#define OUTPUT_13_DTYPE       real_T
#define OUTPUT_13_COMPLEX     COMPLEX_NO
#define OUT_13_FRAME_BASED    FRAME_NO
#define OUT_13_BUS_BASED      0
#define OUT_13_BUS_NAME       
#define OUT_13_DIMS           1-D
#define OUT_13_ISSIGNED        1
#define OUT_13_WORDLENGTH      8
#define OUT_13_FIXPOINTSCALING 1
#define OUT_13_FRACTIONLENGTH  3
#define OUT_13_BIAS            0
#define OUT_13_SLOPE           0.125
/* Output Port  14 */
#define OUT_PORT_14_NAME      ignitionKey
#define OUTPUT_14_WIDTH       1
#define OUTPUT_DIMS_14_COL    1
#define OUTPUT_14_DTYPE       real_T
#define OUTPUT_14_COMPLEX     COMPLEX_NO
#define OUT_14_FRAME_BASED    FRAME_NO
#define OUT_14_BUS_BASED      0
#define OUT_14_BUS_NAME       
#define OUT_14_DIMS           1-D
#define OUT_14_ISSIGNED        1
#define OUT_14_WORDLENGTH      8
#define OUT_14_FIXPOINTSCALING 1
#define OUT_14_FRACTIONLENGTH  3
#define OUT_14_BIAS            0
#define OUT_14_SLOPE           0.125
/* Output Port  15 */
#define OUT_PORT_15_NAME      parkingBrake
#define OUTPUT_15_WIDTH       1
#define OUTPUT_DIMS_15_COL    1
#define OUTPUT_15_DTYPE       real_T
#define OUTPUT_15_COMPLEX     COMPLEX_NO
#define OUT_15_FRAME_BASED    FRAME_NO
#define OUT_15_BUS_BASED      0
#define OUT_15_BUS_NAME       
#define OUT_15_DIMS           1-D
#define OUT_15_ISSIGNED        1
#define OUT_15_WORDLENGTH      8
#define OUT_15_FIXPOINTSCALING 1
#define OUT_15_FRACTIONLENGTH  3
#define OUT_15_BIAS            0
#define OUT_15_SLOPE           0.125
/* Output Port  16 */
#define OUT_PORT_16_NAME      fowa
#define OUTPUT_16_WIDTH       1
#define OUTPUT_DIMS_16_COL    1
#define OUTPUT_16_DTYPE       real_T
#define OUTPUT_16_COMPLEX     COMPLEX_NO
#define OUT_16_FRAME_BASED    FRAME_NO
#define OUT_16_BUS_BASED      0
#define OUT_16_BUS_NAME       
#define OUT_16_DIMS           1-D
#define OUT_16_ISSIGNED        1
#define OUT_16_WORDLENGTH      8
#define OUT_16_FIXPOINTSCALING 1
#define OUT_16_FRACTIONLENGTH  3
#define OUT_16_BIAS            0
#define OUT_16_SLOPE           0.125
/* Output Port  17 */
#define OUT_PORT_17_NAME      telma
#define OUTPUT_17_WIDTH       1
#define OUTPUT_DIMS_17_COL    1
#define OUTPUT_17_DTYPE       real_T
#define OUTPUT_17_COMPLEX     COMPLEX_NO
#define OUT_17_FRAME_BASED    FRAME_NO
#define OUT_17_BUS_BASED      0
#define OUT_17_BUS_NAME       
#define OUT_17_DIMS           1-D
#define OUT_17_ISSIGNED        1
#define OUT_17_WORDLENGTH      8
#define OUT_17_FIXPOINTSCALING 1
#define OUT_17_FRACTIONLENGTH  3
#define OUT_17_BIAS            0
#define OUT_17_SLOPE           0.125
/* Output Port  18 */
#define OUT_PORT_18_NAME      indicators
#define OUTPUT_18_WIDTH       1
#define OUTPUT_DIMS_18_COL    1
#define OUTPUT_18_DTYPE       real_T
#define OUTPUT_18_COMPLEX     COMPLEX_NO
#define OUT_18_FRAME_BASED    FRAME_NO
#define OUT_18_BUS_BASED      0
#define OUT_18_BUS_NAME       
#define OUT_18_DIMS           1-D
#define OUT_18_ISSIGNED        1
#define OUT_18_WORDLENGTH      8
#define OUT_18_FIXPOINTSCALING 1
#define OUT_18_FRACTIONLENGTH  3
#define OUT_18_BIAS            0
#define OUT_18_SLOPE           0.125
/* Output Port  19 */
#define OUT_PORT_19_NAME      lights
#define OUTPUT_19_WIDTH       1
#define OUTPUT_DIMS_19_COL    1
#define OUTPUT_19_DTYPE       real_T
#define OUTPUT_19_COMPLEX     COMPLEX_NO
#define OUT_19_FRAME_BASED    FRAME_NO
#define OUT_19_BUS_BASED      0
#define OUT_19_BUS_NAME       
#define OUT_19_DIMS           1-D
#define OUT_19_ISSIGNED        1
#define OUT_19_WORDLENGTH      8
#define OUT_19_FIXPOINTSCALING 1
#define OUT_19_FRACTIONLENGTH  3
#define OUT_19_BIAS            0
#define OUT_19_SLOPE           0.125
/* Output Port  20 */
#define OUT_PORT_20_NAME      rearWiperState
#define OUTPUT_20_WIDTH       1
#define OUTPUT_DIMS_20_COL    1
#define OUTPUT_20_DTYPE       real_T
#define OUTPUT_20_COMPLEX     COMPLEX_NO
#define OUT_20_FRAME_BASED    FRAME_NO
#define OUT_20_BUS_BASED      0
#define OUT_20_BUS_NAME       
#define OUT_20_DIMS           1-D
#define OUT_20_ISSIGNED        1
#define OUT_20_WORDLENGTH      8
#define OUT_20_FIXPOINTSCALING 1
#define OUT_20_FRACTIONLENGTH  3
#define OUT_20_BIAS            0
#define OUT_20_SLOPE           0.125
/* Output Port  21 */
#define OUT_PORT_21_NAME      frontWiperState
#define OUTPUT_21_WIDTH       1
#define OUTPUT_DIMS_21_COL    1
#define OUTPUT_21_DTYPE       real_T
#define OUTPUT_21_COMPLEX     COMPLEX_NO
#define OUT_21_FRAME_BASED    FRAME_NO
#define OUT_21_BUS_BASED      0
#define OUT_21_BUS_NAME       
#define OUT_21_DIMS           1-D
#define OUT_21_ISSIGNED        1
#define OUT_21_WORDLENGTH      8
#define OUT_21_FIXPOINTSCALING 1
#define OUT_21_FRACTIONLENGTH  3
#define OUT_21_BIAS            0
#define OUT_21_SLOPE           0.125
/* Output Port  22 */
#define OUT_PORT_22_NAME      horn
#define OUTPUT_22_WIDTH       1
#define OUTPUT_DIMS_22_COL    1
#define OUTPUT_22_DTYPE       real_T
#define OUTPUT_22_COMPLEX     COMPLEX_NO
#define OUT_22_FRAME_BASED    FRAME_NO
#define OUT_22_BUS_BASED      0
#define OUT_22_BUS_NAME       
#define OUT_22_DIMS           1-D
#define OUT_22_ISSIGNED        1
#define OUT_22_WORDLENGTH      8
#define OUT_22_FIXPOINTSCALING 1
#define OUT_22_FRACTIONLENGTH  3
#define OUT_22_BIAS            0
#define OUT_22_SLOPE           0.125
/* Output Port  23 */
#define OUT_PORT_23_NAME      warnings
#define OUTPUT_23_WIDTH       1
#define OUTPUT_DIMS_23_COL    1
#define OUTPUT_23_DTYPE       real_T
#define OUTPUT_23_COMPLEX     COMPLEX_NO
#define OUT_23_FRAME_BASED    FRAME_NO
#define OUT_23_BUS_BASED      0
#define OUT_23_BUS_NAME       
#define OUT_23_DIMS           1-D
#define OUT_23_ISSIGNED        1
#define OUT_23_WORDLENGTH      8
#define OUT_23_FIXPOINTSCALING 1
#define OUT_23_FRACTIONLENGTH  3
#define OUT_23_BIAS            0
#define OUT_23_SLOPE           0.125
/* Output Port  24 */
#define OUT_PORT_24_NAME      frontFogLights
#define OUTPUT_24_WIDTH       1
#define OUTPUT_DIMS_24_COL    1
#define OUTPUT_24_DTYPE       real_T
#define OUTPUT_24_COMPLEX     COMPLEX_NO
#define OUT_24_FRAME_BASED    FRAME_NO
#define OUT_24_BUS_BASED      0
#define OUT_24_BUS_NAME       
#define OUT_24_DIMS           1-D
#define OUT_24_ISSIGNED        1
#define OUT_24_WORDLENGTH      8
#define OUT_24_FIXPOINTSCALING 1
#define OUT_24_FRACTIONLENGTH  3
#define OUT_24_BIAS            0
#define OUT_24_SLOPE           0.125
/* Output Port  25 */
#define OUT_PORT_25_NAME      rearFogLights
#define OUTPUT_25_WIDTH       1
#define OUTPUT_DIMS_25_COL    1
#define OUTPUT_25_DTYPE       real_T
#define OUTPUT_25_COMPLEX     COMPLEX_NO
#define OUT_25_FRAME_BASED    FRAME_NO
#define OUT_25_BUS_BASED      0
#define OUT_25_BUS_NAME       
#define OUT_25_DIMS           1-D
#define OUT_25_ISSIGNED        1
#define OUT_25_WORDLENGTH      8
#define OUT_25_FIXPOINTSCALING 1
#define OUT_25_FRACTIONLENGTH  3
#define OUT_25_BIAS            0
#define OUT_25_SLOPE           0.125
/* Output Port  26 */
#define OUT_PORT_26_NAME      trailerBrake
#define OUTPUT_26_WIDTH       1
#define OUTPUT_DIMS_26_COL    1
#define OUTPUT_26_DTYPE       real_T
#define OUTPUT_26_COMPLEX     COMPLEX_NO
#define OUT_26_FRAME_BASED    FRAME_NO
#define OUT_26_BUS_BASED      0
#define OUT_26_BUS_NAME       
#define OUT_26_DIMS           1-D
#define OUT_26_ISSIGNED        1
#define OUT_26_WORDLENGTH      8
#define OUT_26_FIXPOINTSCALING 1
#define OUT_26_FRACTIONLENGTH  3
#define OUT_26_BIAS            0
#define OUT_26_SLOPE           0.125
/* Output Port  27 */
#define OUT_PORT_27_NAME      rVLVState
#define OUTPUT_27_WIDTH       1
#define OUTPUT_DIMS_27_COL    1
#define OUTPUT_27_DTYPE       real_T
#define OUTPUT_27_COMPLEX     COMPLEX_NO
#define OUT_27_FRAME_BASED    FRAME_NO
#define OUT_27_BUS_BASED      0
#define OUT_27_BUS_NAME       
#define OUT_27_DIMS           1-D
#define OUT_27_ISSIGNED        1
#define OUT_27_WORDLENGTH      8
#define OUT_27_FIXPOINTSCALING 1
#define OUT_27_FRACTIONLENGTH  3
#define OUT_27_BIAS            0
#define OUT_27_SLOPE           0.125
/* Output Port  28 */
#define OUT_PORT_28_NAME      rVLVTarget
#define OUTPUT_28_WIDTH       1
#define OUTPUT_DIMS_28_COL    1
#define OUTPUT_28_DTYPE       real_T
#define OUTPUT_28_COMPLEX     COMPLEX_NO
#define OUT_28_FRAME_BASED    FRAME_NO
#define OUT_28_BUS_BASED      0
#define OUT_28_BUS_NAME       
#define OUT_28_DIMS           1-D
#define OUT_28_ISSIGNED        1
#define OUT_28_WORDLENGTH      8
#define OUT_28_FIXPOINTSCALING 1
#define OUT_28_FRACTIONLENGTH  3
#define OUT_28_BIAS            0
#define OUT_28_SLOPE           0.125
/* Output Port  29 */
#define OUT_PORT_29_NAME      transferChoice
#define OUTPUT_29_WIDTH       1
#define OUTPUT_DIMS_29_COL    1
#define OUTPUT_29_DTYPE       real_T
#define OUTPUT_29_COMPLEX     COMPLEX_NO
#define OUT_29_FRAME_BASED    FRAME_NO
#define OUT_29_BUS_BASED      0
#define OUT_29_BUS_NAME       
#define OUT_29_DIMS           1-D
#define OUT_29_ISSIGNED        1
#define OUT_29_WORDLENGTH      8
#define OUT_29_FIXPOINTSCALING 1
#define OUT_29_FRACTIONLENGTH  3
#define OUT_29_BIAS            0
#define OUT_29_SLOPE           0.125
/* Output Port  30 */
#define OUT_PORT_30_NAME      lockDiffMode
#define OUTPUT_30_WIDTH       1
#define OUTPUT_DIMS_30_COL    1
#define OUTPUT_30_DTYPE       real_T
#define OUTPUT_30_COMPLEX     COMPLEX_NO
#define OUT_30_FRAME_BASED    FRAME_NO
#define OUT_30_BUS_BASED      0
#define OUT_30_BUS_NAME       
#define OUT_30_DIMS           1-D
#define OUT_30_ISSIGNED        1
#define OUT_30_WORDLENGTH      8
#define OUT_30_FIXPOINTSCALING 1
#define OUT_30_FRACTIONLENGTH  3
#define OUT_30_BIAS            0
#define OUT_30_SLOPE           0.125
/* Output Port  31 */
#define OUT_PORT_31_NAME      rain
#define OUTPUT_31_WIDTH       1
#define OUTPUT_DIMS_31_COL    1
#define OUTPUT_31_DTYPE       real_T
#define OUTPUT_31_COMPLEX     COMPLEX_NO
#define OUT_31_FRAME_BASED    FRAME_NO
#define OUT_31_BUS_BASED      0
#define OUT_31_BUS_NAME       
#define OUT_31_DIMS           1-D
#define OUT_31_ISSIGNED        1
#define OUT_31_WORDLENGTH      8
#define OUT_31_FIXPOINTSCALING 1
#define OUT_31_FRACTIONLENGTH  3
#define OUT_31_BIAS            0
#define OUT_31_SLOPE           0.125
/* Output Port  32 */
#define OUT_PORT_32_NAME      snow
#define OUTPUT_32_WIDTH       1
#define OUTPUT_DIMS_32_COL    1
#define OUTPUT_32_DTYPE       real_T
#define OUTPUT_32_COMPLEX     COMPLEX_NO
#define OUT_32_FRAME_BASED    FRAME_NO
#define OUT_32_BUS_BASED      0
#define OUT_32_BUS_NAME       
#define OUT_32_DIMS           1-D
#define OUT_32_ISSIGNED        1
#define OUT_32_WORDLENGTH      8
#define OUT_32_FIXPOINTSCALING 1
#define OUT_32_FRACTIONLENGTH  3
#define OUT_32_BIAS            0
#define OUT_32_SLOPE           0.125
/* Output Port  33 */
#define OUT_PORT_33_NAME      windHeading
#define OUTPUT_33_WIDTH       1
#define OUTPUT_DIMS_33_COL    1
#define OUTPUT_33_DTYPE       real_T
#define OUTPUT_33_COMPLEX     COMPLEX_NO
#define OUT_33_FRAME_BASED    FRAME_NO
#define OUT_33_BUS_BASED      0
#define OUT_33_BUS_NAME       
#define OUT_33_DIMS           1-D
#define OUT_33_ISSIGNED        1
#define OUT_33_WORDLENGTH      8
#define OUT_33_FIXPOINTSCALING 1
#define OUT_33_FRACTIONLENGTH  3
#define OUT_33_BIAS            0
#define OUT_33_SLOPE           0.125
/* Output Port  34 */
#define OUT_PORT_34_NAME      windVelocity
#define OUTPUT_34_WIDTH       1
#define OUTPUT_DIMS_34_COL    1
#define OUTPUT_34_DTYPE       real_T
#define OUTPUT_34_COMPLEX     COMPLEX_NO
#define OUT_34_FRAME_BASED    FRAME_NO
#define OUT_34_BUS_BASED      0
#define OUT_34_BUS_NAME       
#define OUT_34_DIMS           1-D
#define OUT_34_ISSIGNED        1
#define OUT_34_WORDLENGTH      8
#define OUT_34_FIXPOINTSCALING 1
#define OUT_34_FRACTIONLENGTH  3
#define OUT_34_BIAS            0
#define OUT_34_SLOPE           0.125
/* Output Port  35 */
#define OUT_PORT_35_NAME      temperature
#define OUTPUT_35_WIDTH       1
#define OUTPUT_DIMS_35_COL    1
#define OUTPUT_35_DTYPE       real_T
#define OUTPUT_35_COMPLEX     COMPLEX_NO
#define OUT_35_FRAME_BASED    FRAME_NO
#define OUT_35_BUS_BASED      0
#define OUT_35_BUS_NAME       
#define OUT_35_DIMS           1-D
#define OUT_35_ISSIGNED        1
#define OUT_35_WORDLENGTH      8
#define OUT_35_FIXPOINTSCALING 1
#define OUT_35_FRACTIONLENGTH  3
#define OUT_35_BIAS            0
#define OUT_35_SLOPE           0.125
/* Output Port  36 */
#define OUT_PORT_36_NAME      externalTorserApplicationPoint
#define OUTPUT_36_WIDTH       3
#define OUTPUT_DIMS_36_COL    1
#define OUTPUT_36_DTYPE       real_T
#define OUTPUT_36_COMPLEX     COMPLEX_NO
#define OUT_36_FRAME_BASED    FRAME_NO
#define OUT_36_BUS_BASED      0
#define OUT_36_BUS_NAME       
#define OUT_36_DIMS           1-D
#define OUT_36_ISSIGNED        1
#define OUT_36_WORDLENGTH      8
#define OUT_36_FIXPOINTSCALING 1
#define OUT_36_FRACTIONLENGTH  3
#define OUT_36_BIAS            0
#define OUT_36_SLOPE           0.125
/* Output Port  37 */
#define OUT_PORT_37_NAME      externalTorserForce
#define OUTPUT_37_WIDTH       3
#define OUTPUT_DIMS_37_COL    1
#define OUTPUT_37_DTYPE       real_T
#define OUTPUT_37_COMPLEX     COMPLEX_NO
#define OUT_37_FRAME_BASED    FRAME_NO
#define OUT_37_BUS_BASED      0
#define OUT_37_BUS_NAME       
#define OUT_37_DIMS           1-D
#define OUT_37_ISSIGNED        1
#define OUT_37_WORDLENGTH      8
#define OUT_37_FIXPOINTSCALING 1
#define OUT_37_FRACTIONLENGTH  3
#define OUT_37_BIAS            0
#define OUT_37_SLOPE           0.125
/* Output Port  38 */
#define OUT_PORT_38_NAME      externalTorserMoment
#define OUTPUT_38_WIDTH       3
#define OUTPUT_DIMS_38_COL    1
#define OUTPUT_38_DTYPE       real_T
#define OUTPUT_38_COMPLEX     COMPLEX_NO
#define OUT_38_FRAME_BASED    FRAME_NO
#define OUT_38_BUS_BASED      0
#define OUT_38_BUS_NAME       
#define OUT_38_DIMS           1-D
#define OUT_38_ISSIGNED        1
#define OUT_38_WORDLENGTH      8
#define OUT_38_FIXPOINTSCALING 1
#define OUT_38_FRACTIONLENGTH  3
#define OUT_38_BIAS            0
#define OUT_38_SLOPE           0.125
/* Output Port  39 */
#define OUT_PORT_39_NAME      wheelSensor0
#define OUTPUT_39_WIDTH       9
#define OUTPUT_DIMS_39_COL    1
#define OUTPUT_39_DTYPE       real_T
#define OUTPUT_39_COMPLEX     COMPLEX_NO
#define OUT_39_FRAME_BASED    FRAME_NO
#define OUT_39_BUS_BASED      0
#define OUT_39_BUS_NAME       
#define OUT_39_DIMS           1-D
#define OUT_39_ISSIGNED        1
#define OUT_39_WORDLENGTH      8
#define OUT_39_FIXPOINTSCALING 1
#define OUT_39_FRACTIONLENGTH  3
#define OUT_39_BIAS            0
#define OUT_39_SLOPE           0.125
/* Output Port  40 */
#define OUT_PORT_40_NAME      wheelSensor1
#define OUTPUT_40_WIDTH       9
#define OUTPUT_DIMS_40_COL    1
#define OUTPUT_40_DTYPE       real_T
#define OUTPUT_40_COMPLEX     COMPLEX_NO
#define OUT_40_FRAME_BASED    FRAME_NO
#define OUT_40_BUS_BASED      0
#define OUT_40_BUS_NAME       
#define OUT_40_DIMS           1-D
#define OUT_40_ISSIGNED        1
#define OUT_40_WORDLENGTH      8
#define OUT_40_FIXPOINTSCALING 1
#define OUT_40_FRACTIONLENGTH  3
#define OUT_40_BIAS            0
#define OUT_40_SLOPE           0.125
/* Output Port  41 */
#define OUT_PORT_41_NAME      wheelSensor2
#define OUTPUT_41_WIDTH       9
#define OUTPUT_DIMS_41_COL    1
#define OUTPUT_41_DTYPE       real_T
#define OUTPUT_41_COMPLEX     COMPLEX_NO
#define OUT_41_FRAME_BASED    FRAME_NO
#define OUT_41_BUS_BASED      0
#define OUT_41_BUS_NAME       
#define OUT_41_DIMS           1-D
#define OUT_41_ISSIGNED        1
#define OUT_41_WORDLENGTH      8
#define OUT_41_FIXPOINTSCALING 1
#define OUT_41_FRACTIONLENGTH  3
#define OUT_41_BIAS            0
#define OUT_41_SLOPE           0.125
/* Output Port  42 */
#define OUT_PORT_42_NAME      wheelSensor3
#define OUTPUT_42_WIDTH       9
#define OUTPUT_DIMS_42_COL    1
#define OUTPUT_42_DTYPE       real_T
#define OUTPUT_42_COMPLEX     COMPLEX_NO
#define OUT_42_FRAME_BASED    FRAME_NO
#define OUT_42_BUS_BASED      0
#define OUT_42_BUS_NAME       
#define OUT_42_DIMS           1-D
#define OUT_42_ISSIGNED        1
#define OUT_42_WORDLENGTH      8
#define OUT_42_FIXPOINTSCALING 1
#define OUT_42_FRACTIONLENGTH  3
#define OUT_42_BIAS            0
#define OUT_42_SLOPE           0.125
/* Output Port  43 */
#define OUT_PORT_43_NAME      customVehicleInput
#define OUTPUT_43_WIDTH       256
#define OUTPUT_DIMS_43_COL    1
#define OUTPUT_43_DTYPE       real_T
#define OUTPUT_43_COMPLEX     COMPLEX_NO
#define OUT_43_FRAME_BASED    FRAME_NO
#define OUT_43_BUS_BASED      0
#define OUT_43_BUS_NAME       
#define OUT_43_DIMS           1-D
#define OUT_43_ISSIGNED        1
#define OUT_43_WORDLENGTH      8
#define OUT_43_FIXPOINTSCALING 1
#define OUT_43_FRACTIONLENGTH  3
#define OUT_43_BIAS            0
#define OUT_43_SLOPE           0.125

#define NPARAMS              0

#define SAMPLE_TIME_0        0.002
#define NUM_DISC_STATES      0
#define DISC_STATES_IC       [0]
#define NUM_CONT_STATES      0
#define CONT_STATES_IC       [0]

#define SFUNWIZ_GENERATE_TLC 0
#define SOURCEFILES "__SFB__source/ComVhcDynHelper.cpp__SFB__source/cal_reseau_win32.cpp__SFB__source/cal_timer_win32.cpp__SFB__INC_PATH ../../../include"
#define PANELINDEX           6
#define USE_SIMSTRUCT        1
#define SHOW_COMPILE_STEPS   0                   
#define CREATE_DEBUG_MEXFILE 0
#define SAVE_CODE_ONLY       0
#define SFUNWIZ_REVISION     3.0
/* %%%-SFUNWIZ_defines_Changes_END --- EDIT HERE TO _BEGIN */
/*<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<*/
#include "simstruc.h"

extern void ComVhcDyn_Outputs_wrapper(const real_T *pos,
			const real_T *roll,
			const real_T *pitch,
			const real_T *heading,
			const real_T *speed,
			const real_T *accel,
			const real_T *engineStatus,
			const real_T *engineSpeed,
			const real_T *effectiveSteeringWheelAngle,
			const real_T *SteeringWheelFeedbackTorque,
			const real_T *effectiveGasPedalPos,
			const real_T *effectiveBrake,
			const real_T *effectiveHandBrake,
			const real_T *effectiveClutch,
			const real_T *effectiveGearEngaged,
			const real_T *effectiveGearBoxMode,
			const real_T *effectiveIgnitionKeyPosition,
			const real_T *effectiveConsumption,
			const real_T *isEngineRetarder,
			const real_T *effectiveBrakeRetarderNotch,
			const real_T *effectiveTrailerBrake,
			const real_T *effectiveTransferChoice,
			const real_T *effectiveLockDiffMode,
			const real_T *effectiveForceLockup,
			const real_T *effectivePlowMode,
			const real_T *effectiveHorn,
			const real_T *effectiveLights,
			const real_T *effectiveRearWiperState,
			const real_T *effectiveFrontWiperState,
			const real_T *reserved1,
			const real_T *reserved2,
			const real_T *effectiveBatteryStateOfCharge,
			const real_T *wheel0,
			const real_T *wheel1,
			const real_T *wheel2,
			const real_T *wheel3,
			const real_T *electricMotor0,
			const real_T *electricMotor1,
			const real_T *electricMotor2,
			const real_T *electricMotor3,
			const real_T *electricMotor4,
			const real_T *electricMotor5,
			const real_T *electricMotor6,
			const real_T *customVehicleOutput,
			const real_T *synchronizedValue,
			real_T *initHeading,
			real_T *initSpeed,
			real_T *initGroundPos,
			real_T *initGroundNorm,
			real_T *enableCommandOverride,
			real_T *steeringWheel,
			real_T *steeringWheelSpeed,
			real_T *accelerator,
			real_T *brake,
			real_T *clutch,
			real_T *wantedGear,
			real_T *gearBoxAutoMode,
			real_T *shiftUp,
			real_T *shiftDown,
			real_T *ignitionKey,
			real_T *parkingBrake,
			real_T *fowa,
			real_T *telma,
			real_T *indicators,
			real_T *lights,
			real_T *rearWiperState,
			real_T *frontWiperState,
			real_T *horn,
			real_T *warnings,
			real_T *frontFogLights,
			real_T *rearFogLights,
			real_T *trailerBrake,
			real_T *rVLVState,
			real_T *rVLVTarget,
			real_T *transferChoice,
			real_T *lockDiffMode,
			real_T *rain,
			real_T *snow,
			real_T *windHeading,
			real_T *windVelocity,
			real_T *temperature,
			real_T *externalTorserApplicationPoint,
			real_T *externalTorserForce,
			real_T *externalTorserMoment,
			real_T *wheelSensor0,
			real_T *wheelSensor1,
			real_T *wheelSensor2,
			real_T *wheelSensor3,
			real_T *customVehicleInput,
			SimStruct *S);

/*====================*
 * S-function methods *
 *====================*/
/* Function: mdlInitializeSizes ===============================================
 * Abstract:
 *   Setup sizes of the various vectors.
 */
static void mdlInitializeSizes(SimStruct *S)
{

    DECL_AND_INIT_DIMSINFO(inputDimsInfo);
    DECL_AND_INIT_DIMSINFO(outputDimsInfo);
    ssSetNumSFcnParams(S, NPARAMS);
     if (ssGetNumSFcnParams(S) != ssGetSFcnParamsCount(S)) {
	 return; /* Parameter mismatch will be reported by Simulink */
     }

    ssSetNumContStates(S, NUM_CONT_STATES);
    ssSetNumDiscStates(S, NUM_DISC_STATES);


    if (!ssSetNumInputPorts(S, NUM_INPUTS)) return;
    /*Input Port 0 */
    ssSetInputPortWidth(S,  0, INPUT_0_WIDTH);
    ssSetInputPortDataType(S, 0, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 0, INPUT_0_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 0, INPUT_0_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 0, 1); /*direct input signal access*/

    /*Input Port 1 */
    ssSetInputPortWidth(S,  1, INPUT_1_WIDTH); /* */
    ssSetInputPortDataType(S, 1, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  1, INPUT_1_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 1, INPUT_1_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 1, 1); /*direct input signal access*/

    /*Input Port 2 */
    ssSetInputPortWidth(S,  2, INPUT_2_WIDTH); /* */
    ssSetInputPortDataType(S, 2, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  2, INPUT_2_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 2, INPUT_2_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 2, 1); /*direct input signal access*/

    /*Input Port 3 */
    ssSetInputPortWidth(S,  3, INPUT_3_WIDTH); /* */
    ssSetInputPortDataType(S, 3, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  3, INPUT_3_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 3, INPUT_3_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 3, 1); /*direct input signal access*/

    /*Input Port 4 */
    ssSetInputPortWidth(S,  4, INPUT_4_WIDTH);
    ssSetInputPortDataType(S, 4, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 4, INPUT_4_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 4, INPUT_4_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 4, 1); /*direct input signal access*/

    /*Input Port 5 */
    ssSetInputPortWidth(S,  5, INPUT_5_WIDTH);
    ssSetInputPortDataType(S, 5, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 5, INPUT_5_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 5, INPUT_5_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 5, 1); /*direct input signal access*/

    /*Input Port 6 */
    ssSetInputPortWidth(S,  6, INPUT_6_WIDTH); /* */
    ssSetInputPortDataType(S, 6, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  6, INPUT_6_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 6, INPUT_6_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 6, 1); /*direct input signal access*/

    /*Input Port 7 */
    ssSetInputPortWidth(S,  7, INPUT_7_WIDTH); /* */
    ssSetInputPortDataType(S, 7, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  7, INPUT_7_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 7, INPUT_7_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 7, 1); /*direct input signal access*/

    /*Input Port 8 */
    ssSetInputPortWidth(S,  8, INPUT_8_WIDTH); /* */
    ssSetInputPortDataType(S, 8, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  8, INPUT_8_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 8, INPUT_8_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 8, 1); /*direct input signal access*/

    /*Input Port 9 */
    ssSetInputPortWidth(S,  9, INPUT_9_WIDTH); /* */
    ssSetInputPortDataType(S, 9, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  9, INPUT_9_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 9, INPUT_9_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 9, 1); /*direct input signal access*/

    /*Input Port 10 */
    ssSetInputPortWidth(S,  10, INPUT_10_WIDTH); /* */
    ssSetInputPortDataType(S, 10, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  10, INPUT_10_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 10, INPUT_10_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 10, 1); /*direct input signal access*/

    /*Input Port 11 */
    ssSetInputPortWidth(S,  11, INPUT_11_WIDTH); /* */
    ssSetInputPortDataType(S, 11, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  11, INPUT_11_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 11, INPUT_11_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 11, 1); /*direct input signal access*/

    /*Input Port 12 */
    ssSetInputPortWidth(S,  12, INPUT_12_WIDTH); /* */
    ssSetInputPortDataType(S, 12, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  12, INPUT_12_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 12, INPUT_12_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 12, 1); /*direct input signal access*/

    /*Input Port 13 */
    ssSetInputPortWidth(S,  13, INPUT_13_WIDTH); /* */
    ssSetInputPortDataType(S, 13, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  13, INPUT_13_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 13, INPUT_13_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 13, 1); /*direct input signal access*/

    /*Input Port 14 */
    ssSetInputPortWidth(S,  14, INPUT_14_WIDTH); /* */
    ssSetInputPortDataType(S, 14, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  14, INPUT_14_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 14, INPUT_14_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 14, 1); /*direct input signal access*/

    /*Input Port 15 */
    ssSetInputPortWidth(S,  15, INPUT_15_WIDTH); /* */
    ssSetInputPortDataType(S, 15, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  15, INPUT_15_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 15, INPUT_15_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 15, 1); /*direct input signal access*/

    /*Input Port 16 */
    ssSetInputPortWidth(S,  16, INPUT_16_WIDTH); /* */
    ssSetInputPortDataType(S, 16, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  16, INPUT_16_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 16, INPUT_16_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 16, 1); /*direct input signal access*/

    /*Input Port 17 */
    ssSetInputPortWidth(S,  17, INPUT_17_WIDTH); /* */
    ssSetInputPortDataType(S, 17, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  17, INPUT_17_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 17, INPUT_17_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 17, 1); /*direct input signal access*/

    /*Input Port 18 */
    ssSetInputPortWidth(S,  18, INPUT_18_WIDTH); /* */
    ssSetInputPortDataType(S, 18, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  18, INPUT_18_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 18, INPUT_18_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 18, 1); /*direct input signal access*/

    /*Input Port 19 */
    ssSetInputPortWidth(S,  19, INPUT_19_WIDTH); /* */
    ssSetInputPortDataType(S, 19, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  19, INPUT_19_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 19, INPUT_19_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 19, 1); /*direct input signal access*/

    /*Input Port 20 */
    ssSetInputPortWidth(S,  20, INPUT_20_WIDTH); /* */
    ssSetInputPortDataType(S, 20, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  20, INPUT_20_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 20, INPUT_20_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 20, 1); /*direct input signal access*/

    /*Input Port 21 */
    ssSetInputPortWidth(S,  21, INPUT_21_WIDTH); /* */
    ssSetInputPortDataType(S, 21, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  21, INPUT_21_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 21, INPUT_21_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 21, 1); /*direct input signal access*/

    /*Input Port 22 */
    ssSetInputPortWidth(S,  22, INPUT_22_WIDTH); /* */
    ssSetInputPortDataType(S, 22, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  22, INPUT_22_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 22, INPUT_22_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 22, 1); /*direct input signal access*/

    /*Input Port 23 */
    ssSetInputPortWidth(S,  23, INPUT_23_WIDTH); /* */
    ssSetInputPortDataType(S, 23, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  23, INPUT_23_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 23, INPUT_23_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 23, 1); /*direct input signal access*/

    /*Input Port 24 */
    ssSetInputPortWidth(S,  24, INPUT_24_WIDTH); /* */
    ssSetInputPortDataType(S, 24, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  24, INPUT_24_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 24, INPUT_24_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 24, 1); /*direct input signal access*/

    /*Input Port 25 */
    ssSetInputPortWidth(S,  25, INPUT_25_WIDTH); /* */
    ssSetInputPortDataType(S, 25, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  25, INPUT_25_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 25, INPUT_25_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 25, 1); /*direct input signal access*/

    /*Input Port 26 */
    ssSetInputPortWidth(S,  26, INPUT_26_WIDTH); /* */
    ssSetInputPortDataType(S, 26, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  26, INPUT_26_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 26, INPUT_26_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 26, 1); /*direct input signal access*/

    /*Input Port 27 */
    ssSetInputPortWidth(S,  27, INPUT_27_WIDTH); /* */
    ssSetInputPortDataType(S, 27, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  27, INPUT_27_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 27, INPUT_27_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 27, 1); /*direct input signal access*/

    /*Input Port 28 */
    ssSetInputPortWidth(S,  28, INPUT_28_WIDTH); /* */
    ssSetInputPortDataType(S, 28, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  28, INPUT_28_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 28, INPUT_28_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 28, 1); /*direct input signal access*/

    /*Input Port 29 */
    ssSetInputPortWidth(S,  29, INPUT_29_WIDTH); /* */
    ssSetInputPortDataType(S, 29, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  29, INPUT_29_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 29, INPUT_29_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 29, 1); /*direct input signal access*/

    /*Input Port 30 */
    ssSetInputPortWidth(S,  30, INPUT_30_WIDTH); /* */
    ssSetInputPortDataType(S, 30, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  30, INPUT_30_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 30, INPUT_30_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 30, 1); /*direct input signal access*/

    /*Input Port 31 */
    ssSetInputPortWidth(S,  31, INPUT_31_WIDTH); /* */
    ssSetInputPortDataType(S, 31, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  31, INPUT_31_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 31, INPUT_31_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 31, 1); /*direct input signal access*/

    /*Input Port 32 */
    ssSetInputPortWidth(S,  32, INPUT_32_WIDTH);
    ssSetInputPortDataType(S, 32, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 32, INPUT_32_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 32, INPUT_32_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 32, 1); /*direct input signal access*/

    /*Input Port 33 */
    ssSetInputPortWidth(S,  33, INPUT_33_WIDTH);
    ssSetInputPortDataType(S, 33, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 33, INPUT_33_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 33, INPUT_33_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 33, 1); /*direct input signal access*/

    /*Input Port 34 */
    ssSetInputPortWidth(S,  34, INPUT_34_WIDTH);
    ssSetInputPortDataType(S, 34, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 34, INPUT_34_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 34, INPUT_34_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 34, 1); /*direct input signal access*/

    /*Input Port 35 */
    ssSetInputPortWidth(S,  35, INPUT_35_WIDTH);
    ssSetInputPortDataType(S, 35, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 35, INPUT_35_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 35, INPUT_35_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 35, 1); /*direct input signal access*/

    /*Input Port 36 */
    ssSetInputPortWidth(S,  36, INPUT_36_WIDTH);
    ssSetInputPortDataType(S, 36, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 36, INPUT_36_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 36, INPUT_36_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 36, 1); /*direct input signal access*/

    /*Input Port 37 */
    ssSetInputPortWidth(S,  37, INPUT_37_WIDTH);
    ssSetInputPortDataType(S, 37, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 37, INPUT_37_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 37, INPUT_37_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 37, 1); /*direct input signal access*/

    /*Input Port 38 */
    ssSetInputPortWidth(S,  38, INPUT_38_WIDTH);
    ssSetInputPortDataType(S, 38, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 38, INPUT_38_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 38, INPUT_38_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 38, 1); /*direct input signal access*/

    /*Input Port 39 */
    ssSetInputPortWidth(S,  39, INPUT_39_WIDTH);
    ssSetInputPortDataType(S, 39, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 39, INPUT_39_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 39, INPUT_39_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 39, 1); /*direct input signal access*/

    /*Input Port 40 */
    ssSetInputPortWidth(S,  40, INPUT_40_WIDTH);
    ssSetInputPortDataType(S, 40, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 40, INPUT_40_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 40, INPUT_40_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 40, 1); /*direct input signal access*/

    /*Input Port 41 */
    ssSetInputPortWidth(S,  41, INPUT_41_WIDTH);
    ssSetInputPortDataType(S, 41, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 41, INPUT_41_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 41, INPUT_41_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 41, 1); /*direct input signal access*/

    /*Input Port 42 */
    ssSetInputPortWidth(S,  42, INPUT_42_WIDTH);
    ssSetInputPortDataType(S, 42, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 42, INPUT_42_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 42, INPUT_42_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 42, 1); /*direct input signal access*/

    /*Input Port 43 */
    ssSetInputPortWidth(S,  43, INPUT_43_WIDTH);
    ssSetInputPortDataType(S, 43, SS_DOUBLE);
    ssSetInputPortComplexSignal(S, 43, INPUT_43_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 43, INPUT_43_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 43, 1); /*direct input signal access*/

    /*Input Port 44 */
    ssSetInputPortWidth(S,  44, INPUT_44_WIDTH); /* */
    ssSetInputPortDataType(S, 44, SS_DOUBLE);
    ssSetInputPortComplexSignal(S,  44, INPUT_44_COMPLEX);
    ssSetInputPortDirectFeedThrough(S, 44, INPUT_44_FEEDTHROUGH);
    ssSetInputPortRequiredContiguous(S, 44, 1); /*direct input signal access*/


    if (!ssSetNumOutputPorts(S, NUM_OUTPUTS)) return;
    /* Output Port 0 */
    ssSetOutputPortWidth(S, 0, OUTPUT_0_WIDTH);
    ssSetOutputPortDataType(S, 0, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 0, OUTPUT_0_COMPLEX);
    /* Output Port 1 */
    ssSetOutputPortWidth(S, 1, OUTPUT_1_WIDTH);
    ssSetOutputPortDataType(S, 1, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 1, OUTPUT_1_COMPLEX);
    /* Output Port 2 */
    ssSetOutputPortWidth(S, 2, OUTPUT_2_WIDTH);
    ssSetOutputPortDataType(S, 2, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 2, OUTPUT_2_COMPLEX);
    /* Output Port 3 */
    ssSetOutputPortWidth(S, 3, OUTPUT_3_WIDTH);
    ssSetOutputPortDataType(S, 3, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 3, OUTPUT_3_COMPLEX);
    /* Output Port 4 */
    ssSetOutputPortWidth(S, 4, OUTPUT_4_WIDTH);
    ssSetOutputPortDataType(S, 4, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 4, OUTPUT_4_COMPLEX);
    /* Output Port 5 */
    ssSetOutputPortWidth(S, 5, OUTPUT_5_WIDTH);
    ssSetOutputPortDataType(S, 5, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 5, OUTPUT_5_COMPLEX);
    /* Output Port 6 */
    ssSetOutputPortWidth(S, 6, OUTPUT_6_WIDTH);
    ssSetOutputPortDataType(S, 6, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 6, OUTPUT_6_COMPLEX);
    /* Output Port 7 */
    ssSetOutputPortWidth(S, 7, OUTPUT_7_WIDTH);
    ssSetOutputPortDataType(S, 7, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 7, OUTPUT_7_COMPLEX);
    /* Output Port 8 */
    ssSetOutputPortWidth(S, 8, OUTPUT_8_WIDTH);
    ssSetOutputPortDataType(S, 8, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 8, OUTPUT_8_COMPLEX);
    /* Output Port 9 */
    ssSetOutputPortWidth(S, 9, OUTPUT_9_WIDTH);
    ssSetOutputPortDataType(S, 9, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 9, OUTPUT_9_COMPLEX);
    /* Output Port 10 */
    ssSetOutputPortWidth(S, 10, OUTPUT_10_WIDTH);
    ssSetOutputPortDataType(S, 10, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 10, OUTPUT_10_COMPLEX);
    /* Output Port 11 */
    ssSetOutputPortWidth(S, 11, OUTPUT_11_WIDTH);
    ssSetOutputPortDataType(S, 11, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 11, OUTPUT_11_COMPLEX);
    /* Output Port 12 */
    ssSetOutputPortWidth(S, 12, OUTPUT_12_WIDTH);
    ssSetOutputPortDataType(S, 12, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 12, OUTPUT_12_COMPLEX);
    /* Output Port 13 */
    ssSetOutputPortWidth(S, 13, OUTPUT_13_WIDTH);
    ssSetOutputPortDataType(S, 13, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 13, OUTPUT_13_COMPLEX);
    /* Output Port 14 */
    ssSetOutputPortWidth(S, 14, OUTPUT_14_WIDTH);
    ssSetOutputPortDataType(S, 14, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 14, OUTPUT_14_COMPLEX);
    /* Output Port 15 */
    ssSetOutputPortWidth(S, 15, OUTPUT_15_WIDTH);
    ssSetOutputPortDataType(S, 15, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 15, OUTPUT_15_COMPLEX);
    /* Output Port 16 */
    ssSetOutputPortWidth(S, 16, OUTPUT_16_WIDTH);
    ssSetOutputPortDataType(S, 16, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 16, OUTPUT_16_COMPLEX);
    /* Output Port 17 */
    ssSetOutputPortWidth(S, 17, OUTPUT_17_WIDTH);
    ssSetOutputPortDataType(S, 17, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 17, OUTPUT_17_COMPLEX);
    /* Output Port 18 */
    ssSetOutputPortWidth(S, 18, OUTPUT_18_WIDTH);
    ssSetOutputPortDataType(S, 18, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 18, OUTPUT_18_COMPLEX);
    /* Output Port 19 */
    ssSetOutputPortWidth(S, 19, OUTPUT_19_WIDTH);
    ssSetOutputPortDataType(S, 19, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 19, OUTPUT_19_COMPLEX);
    /* Output Port 20 */
    ssSetOutputPortWidth(S, 20, OUTPUT_20_WIDTH);
    ssSetOutputPortDataType(S, 20, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 20, OUTPUT_20_COMPLEX);
    /* Output Port 21 */
    ssSetOutputPortWidth(S, 21, OUTPUT_21_WIDTH);
    ssSetOutputPortDataType(S, 21, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 21, OUTPUT_21_COMPLEX);
    /* Output Port 22 */
    ssSetOutputPortWidth(S, 22, OUTPUT_22_WIDTH);
    ssSetOutputPortDataType(S, 22, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 22, OUTPUT_22_COMPLEX);
    /* Output Port 23 */
    ssSetOutputPortWidth(S, 23, OUTPUT_23_WIDTH);
    ssSetOutputPortDataType(S, 23, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 23, OUTPUT_23_COMPLEX);
    /* Output Port 24 */
    ssSetOutputPortWidth(S, 24, OUTPUT_24_WIDTH);
    ssSetOutputPortDataType(S, 24, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 24, OUTPUT_24_COMPLEX);
    /* Output Port 25 */
    ssSetOutputPortWidth(S, 25, OUTPUT_25_WIDTH);
    ssSetOutputPortDataType(S, 25, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 25, OUTPUT_25_COMPLEX);
    /* Output Port 26 */
    ssSetOutputPortWidth(S, 26, OUTPUT_26_WIDTH);
    ssSetOutputPortDataType(S, 26, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 26, OUTPUT_26_COMPLEX);
    /* Output Port 27 */
    ssSetOutputPortWidth(S, 27, OUTPUT_27_WIDTH);
    ssSetOutputPortDataType(S, 27, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 27, OUTPUT_27_COMPLEX);
    /* Output Port 28 */
    ssSetOutputPortWidth(S, 28, OUTPUT_28_WIDTH);
    ssSetOutputPortDataType(S, 28, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 28, OUTPUT_28_COMPLEX);
    /* Output Port 29 */
    ssSetOutputPortWidth(S, 29, OUTPUT_29_WIDTH);
    ssSetOutputPortDataType(S, 29, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 29, OUTPUT_29_COMPLEX);
    /* Output Port 30 */
    ssSetOutputPortWidth(S, 30, OUTPUT_30_WIDTH);
    ssSetOutputPortDataType(S, 30, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 30, OUTPUT_30_COMPLEX);
    /* Output Port 31 */
    ssSetOutputPortWidth(S, 31, OUTPUT_31_WIDTH);
    ssSetOutputPortDataType(S, 31, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 31, OUTPUT_31_COMPLEX);
    /* Output Port 32 */
    ssSetOutputPortWidth(S, 32, OUTPUT_32_WIDTH);
    ssSetOutputPortDataType(S, 32, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 32, OUTPUT_32_COMPLEX);
    /* Output Port 33 */
    ssSetOutputPortWidth(S, 33, OUTPUT_33_WIDTH);
    ssSetOutputPortDataType(S, 33, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 33, OUTPUT_33_COMPLEX);
    /* Output Port 34 */
    ssSetOutputPortWidth(S, 34, OUTPUT_34_WIDTH);
    ssSetOutputPortDataType(S, 34, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 34, OUTPUT_34_COMPLEX);
    /* Output Port 35 */
    ssSetOutputPortWidth(S, 35, OUTPUT_35_WIDTH);
    ssSetOutputPortDataType(S, 35, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 35, OUTPUT_35_COMPLEX);
    /* Output Port 36 */
    ssSetOutputPortWidth(S, 36, OUTPUT_36_WIDTH);
    ssSetOutputPortDataType(S, 36, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 36, OUTPUT_36_COMPLEX);
    /* Output Port 37 */
    ssSetOutputPortWidth(S, 37, OUTPUT_37_WIDTH);
    ssSetOutputPortDataType(S, 37, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 37, OUTPUT_37_COMPLEX);
    /* Output Port 38 */
    ssSetOutputPortWidth(S, 38, OUTPUT_38_WIDTH);
    ssSetOutputPortDataType(S, 38, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 38, OUTPUT_38_COMPLEX);
    /* Output Port 39 */
    ssSetOutputPortWidth(S, 39, OUTPUT_39_WIDTH);
    ssSetOutputPortDataType(S, 39, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 39, OUTPUT_39_COMPLEX);
    /* Output Port 40 */
    ssSetOutputPortWidth(S, 40, OUTPUT_40_WIDTH);
    ssSetOutputPortDataType(S, 40, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 40, OUTPUT_40_COMPLEX);
    /* Output Port 41 */
    ssSetOutputPortWidth(S, 41, OUTPUT_41_WIDTH);
    ssSetOutputPortDataType(S, 41, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 41, OUTPUT_41_COMPLEX);
    /* Output Port 42 */
    ssSetOutputPortWidth(S, 42, OUTPUT_42_WIDTH);
    ssSetOutputPortDataType(S, 42, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 42, OUTPUT_42_COMPLEX);
    /* Output Port 43 */
    ssSetOutputPortWidth(S, 43, OUTPUT_43_WIDTH);
    ssSetOutputPortDataType(S, 43, SS_DOUBLE);
    ssSetOutputPortComplexSignal(S, 43, OUTPUT_43_COMPLEX);

    ssSetNumSampleTimes(S, 1);
    ssSetNumRWork(S, 0);
    ssSetNumIWork(S, 0);
    ssSetNumPWork(S, 0);
    ssSetNumModes(S, 0);
    ssSetNumNonsampledZCs(S, 0);

    ssSetSimulinkVersionGeneratedIn(S, "8.8");

    /* Take care when specifying exception free code - see sfuntmpl_doc.c */
    ssSetOptions(S, (SS_OPTION_EXCEPTION_FREE_CODE |
		     SS_OPTION_WORKS_WITH_CODE_REUSE));
}

#if defined(MATLAB_MEX_FILE)
#define MDL_SET_INPUT_PORT_DIMENSION_INFO
static void mdlSetInputPortDimensionInfo(SimStruct        *S, 
                                         int_T            port,
                                         const DimsInfo_T *dimsInfo)
{
    if(!ssSetInputPortDimensionInfo(S, port, dimsInfo)) return;
}
#endif

#define MDL_SET_OUTPUT_PORT_DIMENSION_INFO
#if defined(MDL_SET_OUTPUT_PORT_DIMENSION_INFO)
static void mdlSetOutputPortDimensionInfo(SimStruct        *S, 
                                          int_T            port, 
                                          const DimsInfo_T *dimsInfo)
{
 if (!ssSetOutputPortDimensionInfo(S, port, dimsInfo)) return;
}
#endif
#define MDL_SET_DEFAULT_PORT_DIMENSION_INFO
static void mdlSetDefaultPortDimensionInfo(SimStruct *S)
{
  DECL_AND_INIT_DIMSINFO(portDimsInfo);
  int_T dims[2] = { INPUT_0_WIDTH, 1 };
  bool  frameIn = ssGetInputPortFrameData(S, 0) == FRAME_YES;

  /* Neither the input nor the output ports have been set */

  portDimsInfo.width   = INPUT_0_WIDTH;
  portDimsInfo.numDims = frameIn ? 2 : 1;
  portDimsInfo.dims    = frameIn ? dims : &portDimsInfo.width;
  if (ssGetInputPortNumDimensions(S, 0) == (-1)) {  
   ssSetInputPortDimensionInfo(S, 0, &portDimsInfo);
  }
  portDimsInfo.width   = OUTPUT_0_WIDTH;
  dims[0]              = OUTPUT_0_WIDTH;
  dims[1]              = 1;
  portDimsInfo.dims    = frameIn ? dims : &portDimsInfo.width;
 if (ssGetOutputPortNumDimensions(S, 0) == (-1)) {  
  ssSetOutputPortDimensionInfo(S, 0, &portDimsInfo);
 }
  return;
}
# define MDL_SET_INPUT_PORT_FRAME_DATA
static void mdlSetInputPortFrameData(SimStruct  *S, 
                                     int_T      port,
                                     Frame_T    frameData)
{
    ssSetInputPortFrameData(S, port, frameData);
}
/* Function: mdlInitializeSampleTimes =========================================
 * Abstract:
 *    Specifiy  the sample time.
 */
static void mdlInitializeSampleTimes(SimStruct *S)
{
    ssSetSampleTime(S, 0, SAMPLE_TIME_0);
    ssSetModelReferenceSampleTimeDefaultInheritance(S);
    ssSetOffsetTime(S, 0, 0.0);
}

#define MDL_SET_INPUT_PORT_DATA_TYPE
static void mdlSetInputPortDataType(SimStruct *S, int port, DTypeId dType)
{
    ssSetInputPortDataType( S, 0, dType);
}
#define MDL_SET_OUTPUT_PORT_DATA_TYPE
static void mdlSetOutputPortDataType(SimStruct *S, int port, DTypeId dType)
{
    ssSetOutputPortDataType(S, 0, dType);
}

#define MDL_SET_DEFAULT_PORT_DATA_TYPES
static void mdlSetDefaultPortDataTypes(SimStruct *S)
{
  ssSetInputPortDataType( S, 0, SS_DOUBLE);
 ssSetOutputPortDataType(S, 0, SS_DOUBLE);
}
/* Function: mdlOutputs =======================================================
 *
*/
static void mdlOutputs(SimStruct *S, int_T tid)
{
    const real_T   *pos  = (const real_T*) ssGetInputPortSignal(S,0);
    const real_T   *roll  = (const real_T*) ssGetInputPortSignal(S,1);
    const real_T   *pitch  = (const real_T*) ssGetInputPortSignal(S,2);
    const real_T   *heading  = (const real_T*) ssGetInputPortSignal(S,3);
    const real_T   *speed  = (const real_T*) ssGetInputPortSignal(S,4);
    const real_T   *accel  = (const real_T*) ssGetInputPortSignal(S,5);
    const real_T   *engineStatus  = (const real_T*) ssGetInputPortSignal(S,6);
    const real_T   *engineSpeed  = (const real_T*) ssGetInputPortSignal(S,7);
    const real_T   *effectiveSteeringWheelAngle  = (const real_T*) ssGetInputPortSignal(S,8);
    const real_T   *SteeringWheelFeedbackTorque  = (const real_T*) ssGetInputPortSignal(S,9);
    const real_T   *effectiveGasPedalPos  = (const real_T*) ssGetInputPortSignal(S,10);
    const real_T   *effectiveBrake  = (const real_T*) ssGetInputPortSignal(S,11);
    const real_T   *effectiveHandBrake  = (const real_T*) ssGetInputPortSignal(S,12);
    const real_T   *effectiveClutch  = (const real_T*) ssGetInputPortSignal(S,13);
    const real_T   *effectiveGearEngaged  = (const real_T*) ssGetInputPortSignal(S,14);
    const real_T   *effectiveGearBoxMode  = (const real_T*) ssGetInputPortSignal(S,15);
    const real_T   *effectiveIgnitionKeyPosition  = (const real_T*) ssGetInputPortSignal(S,16);
    const real_T   *effectiveConsumption  = (const real_T*) ssGetInputPortSignal(S,17);
    const real_T   *isEngineRetarder  = (const real_T*) ssGetInputPortSignal(S,18);
    const real_T   *effectiveBrakeRetarderNotch  = (const real_T*) ssGetInputPortSignal(S,19);
    const real_T   *effectiveTrailerBrake  = (const real_T*) ssGetInputPortSignal(S,20);
    const real_T   *effectiveTransferChoice  = (const real_T*) ssGetInputPortSignal(S,21);
    const real_T   *effectiveLockDiffMode  = (const real_T*) ssGetInputPortSignal(S,22);
    const real_T   *effectiveForceLockup  = (const real_T*) ssGetInputPortSignal(S,23);
    const real_T   *effectivePlowMode  = (const real_T*) ssGetInputPortSignal(S,24);
    const real_T   *effectiveHorn  = (const real_T*) ssGetInputPortSignal(S,25);
    const real_T   *effectiveLights  = (const real_T*) ssGetInputPortSignal(S,26);
    const real_T   *effectiveRearWiperState  = (const real_T*) ssGetInputPortSignal(S,27);
    const real_T   *effectiveFrontWiperState  = (const real_T*) ssGetInputPortSignal(S,28);
    const real_T   *reserved1  = (const real_T*) ssGetInputPortSignal(S,29);
    const real_T   *reserved2  = (const real_T*) ssGetInputPortSignal(S,30);
    const real_T   *effectiveBatteryStateOfCharge  = (const real_T*) ssGetInputPortSignal(S,31);
    const real_T   *wheel0  = (const real_T*) ssGetInputPortSignal(S,32);
    const real_T   *wheel1  = (const real_T*) ssGetInputPortSignal(S,33);
    const real_T   *wheel2  = (const real_T*) ssGetInputPortSignal(S,34);
    const real_T   *wheel3  = (const real_T*) ssGetInputPortSignal(S,35);
    const real_T   *electricMotor0  = (const real_T*) ssGetInputPortSignal(S,36);
    const real_T   *electricMotor1  = (const real_T*) ssGetInputPortSignal(S,37);
    const real_T   *electricMotor2  = (const real_T*) ssGetInputPortSignal(S,38);
    const real_T   *electricMotor3  = (const real_T*) ssGetInputPortSignal(S,39);
    const real_T   *electricMotor4  = (const real_T*) ssGetInputPortSignal(S,40);
    const real_T   *electricMotor5  = (const real_T*) ssGetInputPortSignal(S,41);
    const real_T   *electricMotor6  = (const real_T*) ssGetInputPortSignal(S,42);
    const real_T   *customVehicleOutput  = (const real_T*) ssGetInputPortSignal(S,43);
    const real_T   *synchronizedValue  = (const real_T*) ssGetInputPortSignal(S,44);
    real_T        *initHeading  = (real_T *)ssGetOutputPortRealSignal(S,0);
    real_T        *initSpeed  = (real_T *)ssGetOutputPortRealSignal(S,1);
    real_T        *initGroundPos  = (real_T *)ssGetOutputPortRealSignal(S,2);
    real_T        *initGroundNorm  = (real_T *)ssGetOutputPortRealSignal(S,3);
    real_T        *enableCommandOverride  = (real_T *)ssGetOutputPortRealSignal(S,4);
    real_T        *steeringWheel  = (real_T *)ssGetOutputPortRealSignal(S,5);
    real_T        *steeringWheelSpeed  = (real_T *)ssGetOutputPortRealSignal(S,6);
    real_T        *accelerator  = (real_T *)ssGetOutputPortRealSignal(S,7);
    real_T        *brake  = (real_T *)ssGetOutputPortRealSignal(S,8);
    real_T        *clutch  = (real_T *)ssGetOutputPortRealSignal(S,9);
    real_T        *wantedGear  = (real_T *)ssGetOutputPortRealSignal(S,10);
    real_T        *gearBoxAutoMode  = (real_T *)ssGetOutputPortRealSignal(S,11);
    real_T        *shiftUp  = (real_T *)ssGetOutputPortRealSignal(S,12);
    real_T        *shiftDown  = (real_T *)ssGetOutputPortRealSignal(S,13);
    real_T        *ignitionKey  = (real_T *)ssGetOutputPortRealSignal(S,14);
    real_T        *parkingBrake  = (real_T *)ssGetOutputPortRealSignal(S,15);
    real_T        *fowa  = (real_T *)ssGetOutputPortRealSignal(S,16);
    real_T        *telma  = (real_T *)ssGetOutputPortRealSignal(S,17);
    real_T        *indicators  = (real_T *)ssGetOutputPortRealSignal(S,18);
    real_T        *lights  = (real_T *)ssGetOutputPortRealSignal(S,19);
    real_T        *rearWiperState  = (real_T *)ssGetOutputPortRealSignal(S,20);
    real_T        *frontWiperState  = (real_T *)ssGetOutputPortRealSignal(S,21);
    real_T        *horn  = (real_T *)ssGetOutputPortRealSignal(S,22);
    real_T        *warnings  = (real_T *)ssGetOutputPortRealSignal(S,23);
    real_T        *frontFogLights  = (real_T *)ssGetOutputPortRealSignal(S,24);
    real_T        *rearFogLights  = (real_T *)ssGetOutputPortRealSignal(S,25);
    real_T        *trailerBrake  = (real_T *)ssGetOutputPortRealSignal(S,26);
    real_T        *rVLVState  = (real_T *)ssGetOutputPortRealSignal(S,27);
    real_T        *rVLVTarget  = (real_T *)ssGetOutputPortRealSignal(S,28);
    real_T        *transferChoice  = (real_T *)ssGetOutputPortRealSignal(S,29);
    real_T        *lockDiffMode  = (real_T *)ssGetOutputPortRealSignal(S,30);
    real_T        *rain  = (real_T *)ssGetOutputPortRealSignal(S,31);
    real_T        *snow  = (real_T *)ssGetOutputPortRealSignal(S,32);
    real_T        *windHeading  = (real_T *)ssGetOutputPortRealSignal(S,33);
    real_T        *windVelocity  = (real_T *)ssGetOutputPortRealSignal(S,34);
    real_T        *temperature  = (real_T *)ssGetOutputPortRealSignal(S,35);
    real_T        *externalTorserApplicationPoint  = (real_T *)ssGetOutputPortRealSignal(S,36);
    real_T        *externalTorserForce  = (real_T *)ssGetOutputPortRealSignal(S,37);
    real_T        *externalTorserMoment  = (real_T *)ssGetOutputPortRealSignal(S,38);
    real_T        *wheelSensor0  = (real_T *)ssGetOutputPortRealSignal(S,39);
    real_T        *wheelSensor1  = (real_T *)ssGetOutputPortRealSignal(S,40);
    real_T        *wheelSensor2  = (real_T *)ssGetOutputPortRealSignal(S,41);
    real_T        *wheelSensor3  = (real_T *)ssGetOutputPortRealSignal(S,42);
    real_T        *customVehicleInput  = (real_T *)ssGetOutputPortRealSignal(S,43);

    ComVhcDyn_Outputs_wrapper(pos, roll, pitch, heading, speed, accel, engineStatus, engineSpeed, effectiveSteeringWheelAngle, SteeringWheelFeedbackTorque, effectiveGasPedalPos, effectiveBrake, effectiveHandBrake, effectiveClutch, effectiveGearEngaged, effectiveGearBoxMode, effectiveIgnitionKeyPosition, effectiveConsumption, isEngineRetarder, effectiveBrakeRetarderNotch, effectiveTrailerBrake, effectiveTransferChoice, effectiveLockDiffMode, effectiveForceLockup, effectivePlowMode, effectiveHorn, effectiveLights, effectiveRearWiperState, effectiveFrontWiperState, reserved1, reserved2, effectiveBatteryStateOfCharge, wheel0, wheel1, wheel2, wheel3, electricMotor0, electricMotor1, electricMotor2, electricMotor3, electricMotor4, electricMotor5, electricMotor6, customVehicleOutput, synchronizedValue, initHeading, initSpeed, initGroundPos, initGroundNorm, enableCommandOverride, steeringWheel, steeringWheelSpeed, accelerator, brake, clutch, wantedGear, gearBoxAutoMode, shiftUp, shiftDown, ignitionKey, parkingBrake, fowa, telma, indicators, lights, rearWiperState, frontWiperState, horn, warnings, frontFogLights, rearFogLights, trailerBrake, rVLVState, rVLVTarget, transferChoice, lockDiffMode, rain, snow, windHeading, windVelocity, temperature, externalTorserApplicationPoint, externalTorserForce, externalTorserMoment, wheelSensor0, wheelSensor1, wheelSensor2, wheelSensor3, customVehicleInput, S);

}



/* Function: mdlTerminate =====================================================
 * Abstract:
 *    In this function, you should perform any actions that are necessary
 *    at the termination of a simulation.  For example, if memory was
 *    allocated in mdlStart, this is the place to free it.
 */
static void mdlTerminate(SimStruct *S)
{

}

#ifdef  MATLAB_MEX_FILE    /* Is this file being compiled as a MEX-file? */
#include "simulink.c"      /* MEX-file interface mechanism */
#else
#include "cg_sfun.h"       /* Code generation registration function */
#endif


